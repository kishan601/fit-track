{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# FitTrack - Fitness Tracking Application\n\n## Overview\n\nFitTrack is a full-stack fitness tracking application that allows users to log workouts, track progress, set fitness goals, and browse exercise libraries. The application features a modern React frontend with a luxury gradient design system, backed by an Express.js server with PostgreSQL database integration. The app supports both dark and light themes and provides real-time data visualization for fitness metrics.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript and Vite as the build tool\n- **UI Library**: Comprehensive component system using Radix UI primitives with custom styling\n- **Styling**: TailwindCSS with custom CSS variables for theming, featuring luxury gradient designs and glass morphism effects\n- **State Management**: TanStack React Query for server state management and caching\n- **Form Handling**: React Hook Form with Zod validation for type-safe form processing\n- **Routing**: Wouter for lightweight client-side routing\n- **Theme System**: Custom theme provider supporting light/dark modes with localStorage persistence\n\n### Backend Architecture\n- **Server Framework**: Express.js with TypeScript\n- **Database ORM**: Drizzle ORM with PostgreSQL dialect for type-safe database operations\n- **API Design**: RESTful endpoints following conventional patterns\n- **Data Storage**: In-memory storage implementation with interfaces for easy database migration\n- **Session Management**: Express sessions with PostgreSQL session store support\n- **Request Logging**: Custom middleware for API request/response logging\n\n### Database Schema Design\n- **Users**: Basic user authentication with username/password\n- **Workouts**: Exercise logging with duration, calories, intensity, and timestamps\n- **Exercises**: Pre-seeded exercise library with categories and calorie calculations\n- **Goals**: Fitness goal tracking with progress monitoring\n\nThe schema uses UUID primary keys and proper foreign key relationships for data integrity.\n\n### Component Architecture\n- **Modular Design**: Highly reusable UI components following atomic design principles\n- **Type Safety**: Full TypeScript integration with shared types between frontend and backend\n- **Accessibility**: Built on Radix UI for WCAG compliance and keyboard navigation\n- **Responsive Design**: Mobile-first approach with breakpoint-aware components\n\n### Development Workflow\n- **Monorepo Structure**: Organized with separate client, server, and shared directories\n- **Hot Reloading**: Vite development server with HMR for rapid development\n- **Build Process**: Separate build processes for client (Vite) and server (esbuild)\n- **Type Checking**: Shared TypeScript configuration across all packages\n\n## External Dependencies\n\n### Database & ORM\n- **Neon Database**: Serverless PostgreSQL hosting (@neondatabase/serverless)\n- **Drizzle ORM**: Type-safe database toolkit with migration support\n- **connect-pg-simple**: PostgreSQL session store for Express sessions\n\n### UI & Styling\n- **Radix UI**: Complete set of accessible UI primitives for complex components\n- **TailwindCSS**: Utility-first CSS framework with custom design system\n- **Lucide React**: Modern icon library with tree-shaking support\n- **Framer Motion**: Animation library for smooth transitions and micro-interactions\n- **Embla Carousel**: Carousel component for content galleries\n\n### Development & Build Tools\n- **Vite**: Fast build tool with development server and hot module replacement\n- **TypeScript**: Static type checking across the entire application\n- **ESBuild**: Fast JavaScript bundler for server-side code\n- **PostCSS**: CSS processing with Autoprefixer for browser compatibility\n\n### Data Management\n- **TanStack React Query**: Server state management with caching, synchronization, and background updates\n- **React Hook Form**: Performant form library with minimal re-renders\n- **Zod**: Schema validation for runtime type safety and form validation\n- **date-fns**: Date manipulation library for workout scheduling and progress tracking\n\n### Replit Integration\n- **Replit Vite Plugins**: Development environment optimization with error overlays and cartographer support for enhanced debugging experience","size_bytes":4332},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        blue: {\n          50: \"var(--blue-50)\",\n          100: \"var(--blue-100)\",\n          500: \"var(--blue-500)\",\n          600: \"var(--blue-600)\",\n          700: \"var(--blue-700)\",\n        },\n        sky: {\n          50: \"var(--sky-50)\",\n          100: \"var(--sky-100)\",\n          500: \"var(--sky-500)\",\n          600: \"var(--sky-600)\",\n          700: \"var(--sky-700)\",\n        },\n        success: {\n          DEFAULT: \"var(--success)\",\n          600: \"var(--success-600)\",\n        },\n        slate: {\n          900: \"hsl(224, 71%, 4%)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fadeIn 0.5s ease-in-out\",\n        \"slide-up\": \"slideUp 0.3s ease-out\",\n        \"scale-in\": \"scaleIn 0.2s ease-out\",\n        \"progress\": \"progress 1s ease-out forwards\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        fadeIn: {\n          \"0%\": { opacity: \"0\" },\n          \"100%\": { opacity: \"1\" },\n        },\n        slideUp: {\n          \"0%\": { transform: \"translateY(10px)\", opacity: \"0\" },\n          \"100%\": { transform: \"translateY(0)\", opacity: \"1\" },\n        },\n        scaleIn: {\n          \"0%\": { transform: \"scale(0.95)\", opacity: \"0\" },\n          \"100%\": { transform: \"scale(1)\", opacity: \"1\" },\n        },\n        progress: {\n          \"0%\": { transform: \"scaleX(0)\" },\n          \"100%\": { transform: \"scaleX(1)\" },\n        },\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3932},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"attached_assets/README_1755871979486.md":{"content":"# FitTrack - Fitness Tracker CRA Version\n\nA beautiful fitness tracking application built with Create React App, featuring workout logging, progress tracking, and goal management with dark/light theme support.\n\n## 🚀 Quick Start\n\n### Prerequisites\n- Node.js 16+ (Recommended: Node.js 18 or 20)\n- npm (comes with Node.js) or yarn\n\n### Installation\n\n**⚠️ Important**: This is a complete, standalone Create React App project. You do NOT need to run `npx create-react-app` first.\n\n1. **Download and Extract**\n   - Download the ZIP file from Replit\n   - Extract the `fittrack-cra` folder to your desired location\n   - Open the folder in VS Code\n\n2. **Quick Start (Easy Way)**\n   - **Windows**: Double-click `start.bat`\n   - **Mac/Linux**: Run `bash start.sh` in terminal\n   \n3. **Manual Installation**\n   ```bash\n   cd fittrack-cra\n   npm install\n   npm start\n   ```\n   \n   If you encounter any issues, try:\n   ```bash\n   npm install --legacy-peer-deps\n   ```\n\n5. **Open your browser**\n   - Visit [http://localhost:3000](http://localhost:3000)\n   - The app will automatically reload when you make changes\n   - Data persists in your browser's localStorage\n\n### ✅ Verification\nAfter running `npm start`, you should see:\n- A beautiful fitness dashboard with theme toggle\n- Add workout form with date/time picker\n- Weekly progress charts\n- Exercise library\n- Fitness goals tracking\n\n### 🔧 Troubleshooting\n\n**Port already in use?**\n```bash\nnpm start -- --port 3001\n```\n\n**Dependencies issues?**\n```bash\nrm -rf node_modules package-lock.json\nnpm install\n```\n\n**VS Code Extensions (Recommended):**\n- ES7+ React/Redux/React-Native snippets\n- Tailwind CSS IntelliSense\n- Auto Rename Tag\n\n## 📦 Build for Production\n\n```bash\nnpm run build\n```\n\nThis creates an optimized production build in the `build/` folder.\n\n## 🎯 Features\n\n- **Add Workouts**: Log exercise type, duration, calories, intensity, and notes\n- **Progress Tracking**: Weekly progress visualization with intensity-based colors\n- **Fitness Goals**: Track daily calories, workouts, and active time\n- **Exercise Library**: Browse popular exercises with calorie information\n- **Recent Activities**: View and manage workout history\n- **Dark/Light Theme**: Toggle between themes with smooth transitions\n- **Local Storage**: Data persists across browser sessions\n- **Responsive Design**: Works on desktop, tablet, and mobile\n\n## 🛠️ Tech Stack\n\n- **React 18** with TypeScript\n- **TailwindCSS** for styling\n- **Radix UI** components\n- **React Hook Form** + Zod validation\n- **TanStack Query** for state management\n- **Lucide React** icons\n- **Wouter** for routing\n\n## 📱 Project Structure\n\n```\nsrc/\n├── components/          # React components\n│   ├── ui/             # Reusable UI components (Button, Card, etc.)\n│   ├── add-workout-form.tsx\n│   ├── recent-activities.tsx\n│   ├── weekly-progress.tsx\n│   ├── fitness-goals.tsx\n│   ├── exercise-library.tsx\n│   ├── header.tsx\n│   └── theme-provider.tsx\n├── pages/              # Page components\n│   ├── dashboard.tsx\n│   └── not-found.tsx\n├── hooks/              # Custom React hooks\n│   ├── use-mobile.tsx\n│   └── use-toast.ts\n├── lib/                # Utility functions\n│   ├── queryClient.ts\n│   └── utils.ts\n├── shared/             # Shared types and schemas\n│   └── schema.ts\n├── data/               # Mock data storage\n│   └── mockStorage.ts\n├── App.tsx             # Main app component\n├── index.tsx           # App entry point\n└── index.css           # Global styles\n```\n\n## 🎨 Customization\n\n### Theme Colors\nEdit the CSS variables in `src/index.css` to customize colors:\n\n```css\n:root {\n  --primary: hsl(0, 79%, 69%);        /* Coral red */\n  --secondary: hsl(174, 56%, 57%);    /* Teal */\n  --accent: hsl(203, 69%, 57%);       /* Blue */\n  --success: hsl(142, 43%, 68%);      /* Green */\n}\n```\n\n### Adding New Exercises\nThe app comes pre-seeded with popular exercises. Data is stored in localStorage and managed by the `MockStorage` class in `src/data/mockStorage.ts`.\n\n## 📊 Data Storage\n\nThis version uses **localStorage** for data persistence. All workouts, exercises, and goals are stored locally in your browser. Data will persist across sessions but is specific to each browser/device.\n\n## 🔧 Available Scripts\n\n- `npm start` - Start development server\n- `npm run build` - Build for production  \n- `npm test` - Run tests\n- `npm run eject` - Eject from Create React App (⚠️ irreversible)\n\n## 🤝 Contributing\n\n1. Fork the repository\n2. Create a feature branch\n3. Make your changes\n4. Test thoroughly\n5. Submit a pull request\n\n## 📝 License\n\nMIT License - feel free to use this project for personal or commercial purposes.\n\n## 🎉 Enjoy!\n\nStart tracking your fitness journey with FitTrack! Add your first workout to see the beautiful progress visualizations come to life.","size_bytes":4991},"client/SETUP.md":{"content":"# FitTrack - Setup Instructions\n\n## Prerequisites\n- Node.js (version 16 or higher)\n- npm (comes with Node.js)\n\n## Quick Setup\n\n1. **Extract/Download** this folder to your desired location\n2. **Open terminal** in the `fittrack-standalone-cra` folder\n3. **Install dependencies**:\n   ```bash\n   npm install\n   ```\n4. **Start the application**:\n   ```bash\n   npm start\n   ```\n5. **Open browser** to `http://localhost:3000`\n\n## Features Included\n✅ Beautiful luxury gradient UI  \n✅ Workout logging with date/time  \n✅ Progress tracking charts  \n✅ Exercise library  \n✅ Fitness goals  \n✅ Dark/Light theme toggle  \n✅ Responsive design  \n✅ localStorage persistence  \n\n## Troubleshooting\n\n### Port Already in Use\nIf port 3000 is busy, the app will automatically use another port (3001, 3002, etc.)\n\n### Dependencies Won't Install\n```bash\nrm -rf node_modules package-lock.json\nnpm install\n```\n\n### Build Issues\n```bash\nnpm run build\n```\n\n### Clear Browser Data\nIf you see stale data, clear localStorage:\n1. Open browser dev tools (F12)\n2. Go to Application/Storage tab\n3. Click \"localStorage\" \n4. Delete all FitTrack entries\n\n## File Structure\n```\nfittrack-standalone-cra/\n├── public/           # Static assets\n├── src/\n│   ├── components/   # UI components\n│   ├── data/         # localStorage management\n│   ├── hooks/        # React hooks\n│   ├── lib/          # Utilities\n│   ├── pages/        # App pages\n│   └── shared/       # Types & schemas\n├── package.json      # Dependencies\n└── README.md         # Full documentation\n```\n\n## What's Different from Regular CRA\n\nThis project includes:\n- Pre-built UI component library (Radix UI + shadcn)\n- TailwindCSS with custom gradient system\n- React Query for state management  \n- Complete fitness tracking functionality\n- No backend required - uses localStorage\n\n## Development\n\nTo customize:\n- Edit components in `src/components/`\n- Modify styles in `src/index.css`\n- Update data logic in `src/data/mockStorage.ts`\n\nEnjoy your fitness tracking app! 🏃‍♂️","size_bytes":2088},"client/start.sh":{"content":"#!/bin/bash\n\necho \"\"\necho \"========================================\"\necho \" FitTrack - Fitness Tracker Setup\"\necho \"========================================\"\necho \"\"\necho \"Installing dependencies...\"\nnpm install\necho \"\"\necho \"Starting development server...\"\necho \"Your browser will open automatically at http://localhost:3000\"\necho \"\"\nnpm start","size_bytes":344},"fit-track/QUICK-START.md":{"content":"# 🚀 QUICK START - FitTrack CRA\n\n## What This Is\nThis is a **complete, standalone Create React App project**. You can extract this folder and run it directly without creating a new React app.\n\n## Super Quick Setup (2 Steps)\n\n### Windows Users:\n1. Extract the `fittrack-cra` folder anywhere on your computer\n2. Double-click `start.bat` \n\n### Mac/Linux Users:\n1. Extract the `fittrack-cra` folder anywhere on your computer  \n2. Open terminal, navigate to the folder, and run: `bash start.sh`\n\n## Manual Setup (3 Steps)\n1. Extract the `fittrack-cra` folder\n2. Open terminal/command prompt in the folder\n3. Run these commands:\n   ```bash\n   npm install\n   npm start\n   ```\n\n## That's It!\nYour browser will automatically open to `http://localhost:3000` and you'll see your beautiful fitness tracking app running!\n\n## What You Get\n- ✅ Complete fitness tracker with dark/light theme\n- ✅ Add workouts, track progress, exercise library\n- ✅ Data stored locally in your browser\n- ✅ Mobile-responsive design\n- ✅ Modern React with TypeScript\n\n---\n**Need Help?** Check `README.md` for full documentation or `SETUP.md` for detailed troubleshooting.","size_bytes":1145},"fit-track/README.md":{"content":"# FitTrack - Standalone CRA Version\n\nA beautiful, luxury fitness tracking application built with Create React App. Features stunning gradient designs, comprehensive workout logging, and localStorage-based data persistence.\n\n## ✨ Features\n\n- **Beautiful UI**: Luxury gradient themes with glass morphism effects\n- **Workout Logging**: Add workouts with exercise type, duration, calories, and intensity\n- **Progress Tracking**: Visual progress charts and fitness statistics\n- **Exercise Library**: Pre-built exercise database with calorie calculations\n- **Goal Setting**: Set and track daily/weekly fitness goals\n- **Dark/Light Theme**: Elegant theme switching with smooth transitions\n- **Responsive Design**: Works perfectly on desktop and mobile devices\n- **Local Storage**: All data persists in your browser's localStorage\n\n## 🚀 Quick Start\n\n1. **Download** this folder to your computer\n2. **Open terminal** in the project folder\n3. **Install dependencies**:\n   ```bash\n   npm install\n   ```\n4. **Start the app**:\n   ```bash\n   npm start\n   ```\n5. **Open your browser** to `http://localhost:3000`\n\n## 🎯 Usage\n\n1. **Add Workouts**: Click \"Add Workout\" to log your exercise sessions\n2. **View Progress**: Check your weekly progress charts and statistics\n3. **Browse Exercises**: Explore the exercise library for workout ideas\n4. **Set Goals**: Create fitness goals and track your progress\n5. **Switch Themes**: Toggle between light and dark modes\n\n## 🛠 Tech Stack\n\n- **React 18** with TypeScript\n- **Create React App** for build tooling\n- **TailwindCSS** for styling\n- **Radix UI** for accessible components\n- **React Query** for state management\n- **React Hook Form** for form handling\n- **Zod** for data validation\n- **Local Storage** for data persistence\n\n## 📱 Components\n\n- Dashboard with real-time statistics\n- Add Workout Form with date/time selection\n- Recent Activities with beautiful cards\n- Weekly Progress charts\n- Exercise Library browser\n- Fitness Goals tracker\n- Theme toggle\n- Responsive navigation\n\n## 🎨 Design System\n\n- **Gradients**: Custom CSS gradient variables\n- **Typography**: Inter font family\n- **Colors**: HSL-based color system\n- **Animations**: Smooth transitions and micro-interactions\n- **Glass Effects**: Modern backdrop-filter effects\n- **Scrollbars**: Custom styled scrollbars\n\n## 💾 Data Management\n\nAll workout data, goals, and preferences are stored in your browser's localStorage:\n- Workouts with exercise details\n- User fitness goals\n- Theme preferences\n- Exercise library data\n\n## 🚨 Troubleshooting\n\nIf you encounter any issues:\n\n1. **Dependencies not installing**:\n   ```bash\n   rm -rf node_modules package-lock.json\n   npm install\n   ```\n\n2. **App not starting**:\n   - Ensure you have Node.js installed (v16 or higher)\n   - Check if port 3000 is available\n\n3. **Styling issues**:\n   - Clear browser cache\n   - Refresh the page\n\n## 🔧 Development\n\nTo modify the app:\n- Components are in `src/components/`\n- Pages are in `src/pages/`\n- Styles are in `src/index.css`\n- Data management in `src/data/`\n\n## 📄 License\n\nThis project is for personal use and learning purposes.\n\n---\n\nEnjoy tracking your fitness journey with FitTrack! 🏃‍♂️💪","size_bytes":3208},"fit-track/SETUP.md":{"content":"# FitTrack - Setup Instructions\n\n## Prerequisites\n- Node.js (version 16 or higher)\n- npm (comes with Node.js)\n\n## Quick Setup\n\n1. **Extract/Download** this folder to your desired location\n2. **Open terminal** in the `fittrack-standalone-cra` folder\n3. **Install dependencies**:\n   ```bash\n   npm install\n   ```\n4. **Start the application**:\n   ```bash\n   npm start\n   ```\n5. **Open browser** to `http://localhost:3000`\n\n## Features Included\n✅ Beautiful luxury gradient UI  \n✅ Workout logging with date/time  \n✅ Progress tracking charts  \n✅ Exercise library  \n✅ Fitness goals  \n✅ Dark/Light theme toggle  \n✅ Responsive design  \n✅ localStorage persistence  \n\n## Troubleshooting\n\n### Port Already in Use\nIf port 3000 is busy, the app will automatically use another port (3001, 3002, etc.)\n\n### Dependencies Won't Install\n```bash\nrm -rf node_modules package-lock.json\nnpm install\n```\n\n### Build Issues\n```bash\nnpm run build\n```\n\n### Clear Browser Data\nIf you see stale data, clear localStorage:\n1. Open browser dev tools (F12)\n2. Go to Application/Storage tab\n3. Click \"localStorage\" \n4. Delete all FitTrack entries\n\n## File Structure\n```\nfittrack-standalone-cra/\n├── public/           # Static assets\n├── src/\n│   ├── components/   # UI components\n│   ├── data/         # localStorage management\n│   ├── hooks/        # React hooks\n│   ├── lib/          # Utilities\n│   ├── pages/        # App pages\n│   └── shared/       # Types & schemas\n├── package.json      # Dependencies\n└── README.md         # Full documentation\n```\n\n## What's Different from Regular CRA\n\nThis project includes:\n- Pre-built UI component library (Radix UI + shadcn)\n- TailwindCSS with custom gradient system\n- React Query for state management  \n- Complete fitness tracking functionality\n- No backend required - uses localStorage\n\n## Development\n\nTo customize:\n- Edit components in `src/components/`\n- Modify styles in `src/index.css`\n- Update data logic in `src/data/mockStorage.ts`\n\nEnjoy your fitness tracking app! 🏃‍♂️","size_bytes":2088},"fit-track/postcss.config.js":{"content":"module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}","size_bytes":81},"fit-track/start.sh":{"content":"#!/bin/bash\n\necho \"\"\necho \"========================================\"\necho \" FitTrack - Fitness Tracker Setup\"\necho \"========================================\"\necho \"\"\necho \"Installing dependencies...\"\nnpm install\necho \"\"\necho \"Starting development server...\"\necho \"Your browser will open automatically at http://localhost:3000\"\necho \"\"\nnpm start","size_bytes":344},"fit-track/tailwind.config.js":{"content":"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\"./src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n    },\n  },\n  plugins: [],\n}","size_bytes":1445},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertWorkoutSchema, insertExerciseSchema, insertGoalSchema } from \"@shared/schema\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  \n  // Workouts endpoints\n  app.get(\"/api/workouts\", async (req, res) => {\n    try {\n      // For demo purposes, use a default user ID\n      const userId = \"demo-user\";\n      const workouts = await storage.getWorkouts(userId);\n      res.json(workouts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch workouts\" });\n    }\n  });\n\n  app.post(\"/api/workouts\", async (req, res) => {\n    try {\n      const userId = \"demo-user\";\n      const validatedData = insertWorkoutSchema.parse(req.body);\n      const workout = await storage.createWorkout(userId, validatedData);\n      res.json(workout);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid workout data\" });\n    }\n  });\n\n  app.patch(\"/api/workouts/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const updates = req.body;\n      const workout = await storage.updateWorkout(id, updates);\n      if (!workout) {\n        return res.status(404).json({ message: \"Workout not found\" });\n      }\n      res.json(workout);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to update workout\" });\n    }\n  });\n\n  app.get(\"/api/workouts/weekly\", async (req, res) => {\n    try {\n      const userId = \"demo-user\";\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(endDate.getDate() - 7);\n      \n      const workouts = await storage.getWorkoutsByDateRange(userId, startDate, endDate);\n      res.json(workouts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch weekly workouts\" });\n    }\n  });\n\n  // Exercises endpoints\n  app.get(\"/api/exercises\", async (req, res) => {\n    try {\n      const exercises = await storage.getExercises();\n      res.json(exercises);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch exercises\" });\n    }\n  });\n\n  app.post(\"/api/exercises\", async (req, res) => {\n    try {\n      const validatedData = insertExerciseSchema.parse(req.body);\n      const exercise = await storage.createExercise(validatedData);\n      res.json(exercise);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid exercise data\" });\n    }\n  });\n\n  // Goals endpoints\n  app.get(\"/api/goals\", async (req, res) => {\n    try {\n      const userId = \"demo-user\";\n      const goals = await storage.getGoals(userId);\n      res.json(goals);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch goals\" });\n    }\n  });\n\n  app.post(\"/api/goals\", async (req, res) => {\n    try {\n      const userId = \"demo-user\";\n      const validatedData = insertGoalSchema.parse(req.body);\n      const goal = await storage.createGoal(userId, validatedData);\n      res.json(goal);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid goal data\" });\n    }\n  });\n\n  app.patch(\"/api/goals/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const { current } = req.body;\n      const goal = await storage.updateGoal(id, current);\n      if (!goal) {\n        return res.status(404).json({ message: \"Goal not found\" });\n      }\n      res.json(goal);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to update goal\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":3573},"server/storage.ts":{"content":"import { type User, type InsertUser, type Workout, type InsertWorkout, type Exercise, type InsertExercise, type Goal, type InsertGoal } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  getWorkouts(userId: string): Promise<Workout[]>;\n  createWorkout(userId: string, workout: InsertWorkout): Promise<Workout>;\n  updateWorkout(workoutId: string, updates: Partial<Workout>): Promise<Workout | undefined>;\n  getWorkoutsByDateRange(userId: string, startDate: Date, endDate: Date): Promise<Workout[]>;\n  \n  getExercises(): Promise<Exercise[]>;\n  createExercise(exercise: InsertExercise): Promise<Exercise>;\n  \n  getGoals(userId: string): Promise<Goal[]>;\n  createGoal(userId: string, goal: InsertGoal): Promise<Goal>;\n  updateGoal(goalId: string, current: number): Promise<Goal | undefined>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private workouts: Map<string, Workout>;\n  private exercises: Map<string, Exercise>;\n  private goals: Map<string, Goal>;\n\n  constructor() {\n    this.users = new Map();\n    this.workouts = new Map();\n    this.exercises = new Map();\n    this.goals = new Map();\n    \n    // Seed with popular exercises\n    this.seedExercises();\n  }\n\n  private seedExercises() {\n    const exercises: Exercise[] = [\n      { id: randomUUID(), name: \"Running\", category: \"cardio\", caloriesPerMinute: 8, emoji: \"🏃‍♂️\" },\n      { id: randomUUID(), name: \"Push-ups\", category: \"strength\", caloriesPerMinute: 5, emoji: \"💪\" },\n      { id: randomUUID(), name: \"Yoga\", category: \"flexibility\", caloriesPerMinute: 3, emoji: \"🧘‍♀️\" },\n      { id: randomUUID(), name: \"HIIT\", category: \"cardio\", caloriesPerMinute: 12, emoji: \"⚡\" },\n      { id: randomUUID(), name: \"Cycling\", category: \"cardio\", caloriesPerMinute: 6, emoji: \"🚴‍♂️\" },\n      { id: randomUUID(), name: \"Swimming\", category: \"cardio\", caloriesPerMinute: 10, emoji: \"🏊‍♂️\" },\n      { id: randomUUID(), name: \"Weight Training\", category: \"strength\", caloriesPerMinute: 7, emoji: \"🏋️‍♂️\" },\n      { id: randomUUID(), name: \"Pilates\", category: \"flexibility\", caloriesPerMinute: 4, emoji: \"🤸‍♀️\" },\n    ];\n    \n    exercises.forEach(exercise => this.exercises.set(exercise.id, exercise));\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getWorkouts(userId: string): Promise<Workout[]> {\n    return Array.from(this.workouts.values()).filter(\n      workout => workout.userId === userId\n    ).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n  }\n\n  async createWorkout(userId: string, insertWorkout: InsertWorkout): Promise<Workout> {\n    const id = randomUUID();\n    const workout: Workout = { \n      ...insertWorkout,\n      notes: insertWorkout.notes || null,\n      id, \n      userId, \n      date: new Date() \n    };\n    this.workouts.set(id, workout);\n    return workout;\n  }\n\n  async updateWorkout(workoutId: string, updates: Partial<Workout>): Promise<Workout | undefined> {\n    const workout = this.workouts.get(workoutId);\n    if (workout) {\n      const updatedWorkout = { ...workout, ...updates };\n      this.workouts.set(workoutId, updatedWorkout);\n      return updatedWorkout;\n    }\n    return undefined;\n  }\n\n  async getWorkoutsByDateRange(userId: string, startDate: Date, endDate: Date): Promise<Workout[]> {\n    return Array.from(this.workouts.values()).filter(\n      workout => workout.userId === userId && \n                 new Date(workout.date) >= startDate && \n                 new Date(workout.date) <= endDate\n    );\n  }\n\n  async getExercises(): Promise<Exercise[]> {\n    return Array.from(this.exercises.values());\n  }\n\n  async createExercise(insertExercise: InsertExercise): Promise<Exercise> {\n    const id = randomUUID();\n    const exercise: Exercise = { ...insertExercise, id };\n    this.exercises.set(id, exercise);\n    return exercise;\n  }\n\n  async getGoals(userId: string): Promise<Goal[]> {\n    return Array.from(this.goals.values()).filter(\n      goal => goal.userId === userId\n    );\n  }\n\n  async createGoal(userId: string, insertGoal: InsertGoal): Promise<Goal> {\n    const id = randomUUID();\n    const goal: Goal = { \n      ...insertGoal, \n      id, \n      userId, \n      current: 0,\n      date: new Date() \n    };\n    this.goals.set(id, goal);\n    return goal;\n  }\n\n  async updateGoal(goalId: string, current: number): Promise<Goal | undefined> {\n    const goal = this.goals.get(goalId);\n    if (goal) {\n      goal.current = current;\n      this.goals.set(goalId, goal);\n    }\n    return goal;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":5186},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const workouts = pgTable(\"workouts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  exerciseType: text(\"exercise_type\").notNull(),\n  duration: integer(\"duration\").notNull(), // in minutes\n  calories: integer(\"calories\").notNull(),\n  intensity: text(\"intensity\").notNull(), // low, medium, high\n  notes: text(\"notes\"),\n  date: timestamp(\"date\").notNull().defaultNow(),\n});\n\nexport const exercises = pgTable(\"exercises\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  category: text(\"category\").notNull(),\n  caloriesPerMinute: integer(\"calories_per_minute\").notNull(),\n  emoji: text(\"emoji\").notNull(),\n});\n\nexport const goals = pgTable(\"goals\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  type: text(\"type\").notNull(), // calories, workouts, activeTime\n  target: integer(\"target\").notNull(),\n  current: integer(\"current\").notNull().default(0),\n  date: timestamp(\"date\").notNull().defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertWorkoutSchema = createInsertSchema(workouts).omit({\n  id: true,\n  userId: true,\n  date: true,\n});\n\nexport const insertExerciseSchema = createInsertSchema(exercises).omit({\n  id: true,\n});\n\nexport const insertGoalSchema = createInsertSchema(goals).omit({\n  id: true,\n  userId: true,\n  current: true,\n  date: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertWorkout = z.infer<typeof insertWorkoutSchema>;\nexport type Workout = typeof workouts.$inferSelect;\nexport type InsertExercise = z.infer<typeof insertExerciseSchema>;\nexport type Exercise = typeof exercises.$inferSelect;\nexport type InsertGoal = z.infer<typeof insertGoalSchema>;\nexport type Goal = typeof goals.$inferSelect;\n","size_bytes":2427},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/components/theme-provider\";\nimport Dashboard from \"@/pages/dashboard\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Dashboard} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider defaultTheme=\"light\" storageKey=\"fittrack-ui-theme\">\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":880},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(222, 84%, 4.9%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(222, 84%, 4.9%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(222, 84%, 4.9%);\n  --primary: hsl(221.2, 83.2%, 53.3%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(210, 40%, 96%);\n  --secondary-foreground: hsl(222.2, 84%, 4.9%);\n  --muted: hsl(210, 40%, 96%);\n  --muted-foreground: hsl(215.4, 16.3%, 46.9%);\n  --accent: hsl(210, 40%, 96%);\n  --accent-foreground: hsl(222.2, 84%, 4.9%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(214.3, 31.8%, 91.4%);\n  --input: hsl(214.3, 31.8%, 91.4%);\n  --ring: hsl(221.2, 83.2%, 53.3%);\n  --chart-1: hsl(12, 76%, 61%);\n  --chart-2: hsl(173, 58%, 39%);\n  --chart-3: hsl(197, 37%, 24%);\n  --chart-4: hsl(43, 74%, 66%);\n  --chart-5: hsl(27, 87%, 67%);\n  --sidebar: hsl(0, 0%, 100%);\n  --sidebar-foreground: hsl(240, 5.9%, 10%);\n  --sidebar-primary: hsl(240, 5.9%, 10%);\n  --sidebar-primary-foreground: hsl(0, 0%, 98%);\n  --sidebar-accent: hsl(240, 4.8%, 95.9%);\n  --sidebar-accent-foreground: hsl(240, 5.9%, 10%);\n  --sidebar-border: hsl(220, 13%, 91%);\n  --sidebar-ring: hsl(217.2, 91.2%, 59.8%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  \n  /* FitTrack Custom Colors - Blue Theme */\n  --blue-50: hsl(214, 100%, 97%);\n  --blue-100: hsl(214, 95%, 93%);\n  --blue-500: hsl(217, 91%, 60%);\n  --blue-600: hsl(221, 83%, 53%);\n  --blue-700: hsl(224, 76%, 48%);\n  \n  --sky-50: hsl(204, 100%, 97%);\n  --sky-100: hsl(204, 94%, 94%);\n  --sky-500: hsl(199, 89%, 48%);\n  --sky-600: hsl(200, 98%, 39%);\n  --sky-700: hsl(201, 96%, 32%);\n  \n  --success: hsl(142, 76%, 36%);\n  --success-600: hsl(142, 69%, 58%);\n}\n\n.dark {\n  --background: hsl(224, 71%, 4%);\n  --foreground: hsl(213, 31%, 91%);\n  --card: hsl(224, 71%, 6%);\n  --card-foreground: hsl(213, 31%, 91%);\n  --popover: hsl(224, 71%, 6%);\n  --popover-foreground: hsl(213, 31%, 91%);\n  --primary: hsl(217, 91%, 60%);\n  --primary-foreground: hsl(224, 71%, 4%);\n  --secondary: hsl(215, 28%, 17%);\n  --secondary-foreground: hsl(213, 31%, 91%);\n  --muted: hsl(215, 28%, 17%);\n  --muted-foreground: hsl(217, 10%, 65%);\n  --accent: hsl(215, 28%, 17%);\n  --accent-foreground: hsl(213, 31%, 91%);\n  --destructive: hsl(0, 63%, 31%);\n  --destructive-foreground: hsl(213, 31%, 91%);\n  --border: hsl(215, 28%, 17%);\n  --input: hsl(215, 28%, 17%);\n  --ring: hsl(217, 91%, 60%);\n  --chart-1: hsl(220, 70%, 50%);\n  --chart-2: hsl(160, 60%, 45%);\n  --chart-3: hsl(30, 80%, 55%);\n  --chart-4: hsl(280, 65%, 60%);\n  --chart-5: hsl(340, 75%, 55%);\n  --sidebar: hsl(224, 71%, 4%);\n  --sidebar-foreground: hsl(213, 31%, 91%);\n  --sidebar-primary: hsl(215, 25%, 27%);\n  --sidebar-primary-foreground: hsl(213, 31%, 91%);\n  --sidebar-accent: hsl(215, 28%, 17%);\n  --sidebar-accent-foreground: hsl(213, 31%, 91%);\n  --sidebar-border: hsl(215, 28%, 17%);\n  --sidebar-ring: hsl(217, 91%, 60%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground transition-colors duration-300;\n  }\n}\n\n@layer utilities {\n  .animate-fade-in {\n    animation: fadeIn 0.5s ease-in-out;\n  }\n  \n  .animate-slide-up {\n    animation: slideUp 0.3s ease-out;\n  }\n  \n  .animate-scale-in {\n    animation: scaleIn 0.2s ease-out;\n  }\n  \n  .animate-progress {\n    animation: progress 1s ease-out forwards;\n  }\n}\n\n@keyframes fadeIn {\n  0% { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@keyframes slideUp {\n  0% { transform: translateY(10px); opacity: 0; }\n  100% { transform: translateY(0); opacity: 1; }\n}\n\n@keyframes scaleIn {\n  0% { transform: scale(0.95); opacity: 0; }\n  100% { transform: scale(1); opacity: 1; }\n}\n\n@keyframes progress {\n  0% { transform: scaleX(0); }\n  100% { transform: scaleX(1); }\n}\n\n/* Glassmorphism effects */\n.backdrop-blur-lg {\n  backdrop-filter: blur(16px);\n}\n\n.glass-card {\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(16px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.dark .glass-card {\n  background: rgba(15, 23, 59, 0.9);\n  border: 1px solid rgba(30, 58, 138, 0.3);\n}\n","size_bytes":4389},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"fit-track/public/tailwind.config.js":{"content":"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\"./src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n    },\n  },\n  plugins: [],\n}","size_bytes":1445},"client/src/components/add-workout-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { z } from \"zod\";\nimport { Plus } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nconst workoutSchema = z.object({\n  exerciseType: z.string().min(1, \"Please select an exercise type\"),\n  duration: z.coerce.number().min(1, \"Duration must be at least 1 minute\"),\n  calories: z.coerce.number().min(1, \"Calories must be at least 1\"),\n  intensity: z.enum([\"low\", \"medium\", \"high\"]),\n  date: z.string().min(1, \"Please select a date\"),\n  notes: z.string().optional(),\n});\n\ntype WorkoutFormData = z.infer<typeof workoutSchema>;\n\nconst exerciseOptions = [\n  { value: \"running\", label: \"🏃‍♂️ Running\", emoji: \"🏃‍♂️\" },\n  { value: \"strength\", label: \"💪 Strength Training\", emoji: \"💪\" },\n  { value: \"yoga\", label: \"🧘‍♀️ Yoga\", emoji: \"🧘‍♀️\" },\n  { value: \"cycling\", label: \"🚴‍♂️ Cycling\", emoji: \"🚴‍♂️\" },\n  { value: \"swimming\", label: \"🏊‍♂️ Swimming\", emoji: \"🏊‍♂️\" },\n  { value: \"hiit\", label: \"⚡ HIIT\", emoji: \"⚡\" },\n];\n\nexport function AddWorkoutForm() {\n  const [selectedIntensity, setSelectedIntensity] = useState<string>(\"\");\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm<WorkoutFormData>({\n    resolver: zodResolver(workoutSchema),\n    defaultValues: {\n      exerciseType: \"\",\n      duration: 0,\n      calories: 0,\n      intensity: \"medium\",\n      date: new Date().toISOString().split('T')[0], // Today's date\n      notes: \"\",\n    },\n  });\n\n  const addWorkoutMutation = useMutation({\n    mutationFn: async (data: WorkoutFormData) => {\n      const workoutData = {\n        ...data,\n        date: new Date(data.date)\n      };\n      const response = await apiRequest(\"POST\", \"/api/workouts\", workoutData);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/workouts\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/workouts/weekly\"] });\n      toast({\n        title: \"Workout Added!\",\n        description: \"Your workout has been successfully logged.\",\n      });\n      form.reset({\n        exerciseType: \"\",\n        duration: 0,\n        calories: 0,\n        intensity: \"medium\",\n        date: new Date().toISOString().split('T')[0],\n        notes: \"\",\n      });\n      setSelectedIntensity(\"\");\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to add workout. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: WorkoutFormData) => {\n    addWorkoutMutation.mutate(data);\n  };\n\n  const handleIntensitySelect = (intensity: string) => {\n    setSelectedIntensity(intensity);\n    form.setValue(\"intensity\", intensity as \"low\" | \"medium\" | \"high\");\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-card rounded-2xl p-6 border border-gray-200 dark:border-border shadow-lg animate-slide-up\" data-testid=\"add-workout-form\">\n      <div className=\"flex items-center space-x-3 mb-6\">\n        <div className=\"w-10 h-10 bg-gradient-to-br from-coral-500 to-coral-600 rounded-xl flex items-center justify-center\">\n          <Plus className=\"text-white\" size={20} />\n        </div>\n        <div>\n          <h3 className=\"text-lg font-bold text-slate-900 dark:text-slate-50\">Add Workout</h3>\n          <p className=\"text-sm text-slate-600 dark:text-slate-400\">Log your latest session</p>\n        </div>\n      </div>\n\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n          <FormField\n            control={form.control}\n            name=\"exerciseType\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  Exercise Type\n                </FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                  <FormControl>\n                    <SelectTrigger\n                      className=\"w-full px-4 py-3 bg-slate-50 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-coral-500 focus:border-transparent transition-all duration-200\"\n                      data-testid=\"select-exercise-type\"\n                    >\n                      <SelectValue placeholder=\"Select exercise\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    {exerciseOptions.map((option) => (\n                      <SelectItem key={option.value} value={option.value}>\n                        {option.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <FormField\n              control={form.control}\n              name=\"duration\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                    Duration\n                  </FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Input\n                        type=\"number\"\n                        placeholder=\"45\"\n                        {...field}\n                        className=\"w-full px-4 py-3 bg-slate-50 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-coral-500 focus:border-transparent transition-all duration-200 pr-12\"\n                        data-testid=\"input-duration\"\n                      />\n                      <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-sm text-slate-500 dark:text-slate-400\">\n                        min\n                      </span>\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"calories\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                    Calories\n                  </FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Input\n                        type=\"number\"\n                        placeholder=\"320\"\n                        {...field}\n                        className=\"w-full px-4 py-3 bg-slate-50 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-coral-500 focus:border-transparent transition-all duration-200 pr-12\"\n                        data-testid=\"input-calories\"\n                      />\n                      <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-sm text-slate-500 dark:text-slate-400\">\n                        cal\n                      </span>\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n\n          <FormField\n            control={form.control}\n            name=\"date\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  Date\n                </FormLabel>\n                <FormControl>\n                  <Input\n                    type=\"date\"\n                    {...field}\n                    className=\"w-full px-4 py-3 bg-slate-50 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-coral-500 focus:border-transparent transition-all duration-200\"\n                    data-testid=\"input-date\"\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"intensity\"\n            render={() => (\n              <FormItem>\n                <FormLabel className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  Intensity\n                </FormLabel>\n                <div className=\"grid grid-cols-3 gap-2\">\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    onClick={() => handleIntensitySelect(\"low\")}\n                    className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                      selectedIntensity === \"low\"\n                        ? \"bg-accent/20 text-accent\"\n                        : \"bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-400 hover:bg-accent/20 hover:text-accent\"\n                    }`}\n                    data-testid=\"button-intensity-low\"\n                  >\n                    Low\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    onClick={() => handleIntensitySelect(\"medium\")}\n                    className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                      selectedIntensity === \"medium\"\n                        ? \"bg-teal-50 dark:bg-teal-900/20 text-teal-600 dark:text-teal-400\"\n                        : \"bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-400 hover:bg-teal-100 dark:hover:bg-teal-900/30\"\n                    }`}\n                    data-testid=\"button-intensity-medium\"\n                  >\n                    Medium\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    onClick={() => handleIntensitySelect(\"high\")}\n                    className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                      selectedIntensity === \"high\"\n                        ? \"bg-coral-50 dark:bg-coral-900/20 text-coral-600 dark:text-coral-400\"\n                        : \"bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-400 hover:bg-coral-50 hover:text-coral-600\"\n                    }`}\n                    data-testid=\"button-intensity-high\"\n                  >\n                    High\n                  </Button>\n                </div>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"notes\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  Notes (Optional)\n                </FormLabel>\n                <FormControl>\n                  <Textarea\n                    placeholder=\"How did it feel? Any observations...\"\n                    {...field}\n                    rows={3}\n                    className=\"w-full px-4 py-3 bg-slate-50 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-coral-500 focus:border-transparent transition-all duration-200 resize-none\"\n                    data-testid=\"textarea-notes\"\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <Button\n            type=\"submit\"\n            disabled={addWorkoutMutation.isPending}\n            className=\"w-full bg-gradient-to-r from-coral-500 to-coral-600 hover:from-coral-600 hover:to-coral-700 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-200 transform hover:scale-[1.02] hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-coral-500 focus:ring-offset-2 dark:focus:ring-offset-slate-800\"\n            data-testid=\"button-submit-workout\"\n          >\n            {addWorkoutMutation.isPending ? (\n              <>\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\" />\n                Adding...\n              </>\n            ) : (\n              <>\n                <Plus className=\"mr-2\" size={16} />\n                Log Workout\n              </>\n            )}\n          </Button>\n        </form>\n      </Form>\n    </div>\n  );\n}\n","size_bytes":13151},"client/src/components/exercise-library.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Book, Plus, ArrowRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport type { Exercise } from \"@shared/schema\";\n\nexport function ExerciseLibrary() {\n  const { data: exercises, isLoading } = useQuery<Exercise[]>({\n    queryKey: [\"/api/exercises\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white dark:bg-card rounded-2xl p-6 border border-gray-200 dark:border-border shadow-lg animate-slide-up\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 bg-slate-200 dark:bg-slate-700 rounded w-1/3 mb-2\" />\n          <div className=\"h-4 bg-slate-200 dark:bg-slate-700 rounded w-1/2 mb-6\" />\n          <div className=\"space-y-3\">\n            {[1, 2, 3, 4].map((i) => (\n              <div key={i} className=\"h-12 bg-slate-200 dark:bg-slate-700 rounded-lg\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const popularExercises = exercises?.slice(0, 4) || [];\n\n  return (\n    <div className=\"bg-white dark:bg-card rounded-2xl p-6 border border-gray-200 dark:border-border shadow-lg animate-slide-up\" style={{ animationDelay: \"0.3s\" }}>\n      <div className=\"flex items-center space-x-3 mb-6\">\n        <div className=\"w-10 h-10 bg-gradient-to-br from-accent to-blue-600 rounded-xl flex items-center justify-center\">\n          <Book className=\"text-white\" size={20} />\n        </div>\n        <div>\n          <h3 className=\"text-lg font-bold text-slate-900 dark:text-slate-50\">Quick Start</h3>\n          <p className=\"text-sm text-slate-600 dark:text-slate-400\">Popular exercises</p>\n        </div>\n      </div>\n\n      <div className=\"space-y-3\">\n        {popularExercises.length === 0 ? (\n          <div className=\"text-center py-4 text-slate-500 dark:text-slate-400\">\n            <p className=\"text-sm\">Loading exercises...</p>\n          </div>\n        ) : (\n          popularExercises.map((exercise) => (\n            <div\n              key={exercise.id}\n              className=\"flex items-center justify-between p-3 bg-slate-50 dark:bg-slate-800/50 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-700/50 transition-all duration-200 cursor-pointer group\"\n              data-testid={`exercise-item-${exercise.name.toLowerCase().replace(' ', '-')}`}\n            >\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"text-lg\">{exercise.emoji}</div>\n                <div>\n                  <p className=\"font-medium text-slate-900 dark:text-slate-50 text-sm\">\n                    {exercise.name}\n                  </p>\n                  <p className=\"text-xs text-slate-600 dark:text-slate-400\">\n                    ~{exercise.caloriesPerMinute} cal/min\n                  </p>\n                </div>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"p-2 text-slate-400 hover:text-coral-500 transition-colors group-hover:scale-110 transform duration-200\"\n                data-testid={`button-add-exercise-${exercise.name.toLowerCase().replace(' ', '-')}`}\n              >\n                <Plus size={14} />\n              </Button>\n            </div>\n          ))\n        )}\n      </div>\n\n      <Button\n        variant=\"ghost\"\n        className=\"w-full mt-4 py-2 text-accent hover:text-accent/80 font-medium text-sm transition-colors\"\n        data-testid=\"button-browse-all-exercises\"\n      >\n        Browse All Exercises <ArrowRight className=\"ml-1\" size={14} />\n      </Button>\n    </div>\n  );\n}\n","size_bytes":3565},"client/src/components/fitness-goals.tsx":{"content":"import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Target, Flame, Dumbbell, Clock, Edit2, Check, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useState } from \"react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { Workout } from \"@shared/schema\";\n\ninterface DailyStats {\n  calories: { current: number; target: number };\n  workouts: { current: number; target: number };\n  activeTime: { current: number; target: number };\n}\n\nexport function FitnessGoals() {\n  const [editingTarget, setEditingTarget] = useState<string | null>(null);\n  const [editValue, setEditValue] = useState<string>(\"\");\n  const queryClient = useQueryClient();\n  \n  const { data: workouts } = useQuery<Workout[]>({\n    queryKey: [\"/api/workouts\"],\n  });\n\n  // For demo purposes, we'll use local state for targets\n  const [targets, setTargets] = useState({\n    calories: 600,\n    workouts: 3,\n    activeTime: 90\n  });\n\n  const startEditTarget = (goalType: string, currentTarget: number) => {\n    setEditingTarget(goalType);\n    setEditValue(currentTarget.toString());\n  };\n\n  const saveTarget = (goalType: string) => {\n    const value = parseInt(editValue);\n    if (value && value > 0) {\n      setTargets(prev => ({ ...prev, [goalType]: value }));\n      setEditingTarget(null);\n      setEditValue(\"\");\n    }\n  };\n\n  const cancelEdit = () => {\n    setEditingTarget(null);\n    setEditValue(\"\");\n  };\n\n  const getTodayStats = (): DailyStats => {\n    if (!workouts) {\n      return {\n        calories: { current: 0, target: 600 },\n        workouts: { current: 0, target: 3 },\n        activeTime: { current: 0, target: 90 },\n      };\n    }\n\n    const today = new Date();\n    const todayStart = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    const todayEnd = new Date(todayStart.getTime() + 24 * 60 * 60 * 1000);\n\n    const todayWorkouts = workouts.filter(workout => {\n      const workoutDate = new Date(workout.date);\n      return workoutDate >= todayStart && workoutDate < todayEnd;\n    });\n\n    const totalCalories = todayWorkouts.reduce((sum, workout) => sum + workout.calories, 0);\n    const totalDuration = todayWorkouts.reduce((sum, workout) => sum + workout.duration, 0);\n\n    return {\n      calories: { current: totalCalories, target: targets.calories },\n      workouts: { current: todayWorkouts.length, target: targets.workouts },\n      activeTime: { current: totalDuration, target: targets.activeTime },\n    };\n  };\n\n  const stats = getTodayStats();\n\n  const getPercentage = (current: number, target: number) => {\n    return Math.min(Math.round((current / target) * 100), 100);\n  };\n\n  const getOverallProgress = () => {\n    const caloriesPercent = getPercentage(stats.calories.current, stats.calories.target);\n    const workoutsPercent = getPercentage(stats.workouts.current, stats.workouts.target);\n    const activeTimePercent = getPercentage(stats.activeTime.current, stats.activeTime.target);\n    \n    return Math.round((caloriesPercent + workoutsPercent + activeTimePercent) / 3);\n  };\n\n  const goals = [\n    {\n      icon: Flame,\n      title: \"Calories Burned\",\n      current: stats.calories.current,\n      target: stats.calories.target,\n      unit: \"cal\",\n      color: \"coral\",\n      percentage: getPercentage(stats.calories.current, stats.calories.target),\n      bgColor: \"bg-coral-100 dark:bg-coral-900/30\",\n      textColor: \"text-coral-500\",\n      gradientColor: \"from-coral-500 to-coral-600\",\n    },\n    {\n      icon: Dumbbell,\n      title: \"Workouts\",\n      current: stats.workouts.current,\n      target: stats.workouts.target,\n      unit: \"sessions\",\n      color: \"teal\",\n      percentage: getPercentage(stats.workouts.current, stats.workouts.target),\n      bgColor: \"bg-teal-100 dark:bg-teal-900/30\",\n      textColor: \"text-teal-500\",\n      gradientColor: \"from-teal-500 to-teal-600\",\n    },\n    {\n      icon: Clock,\n      title: \"Active Time\",\n      current: stats.activeTime.current,\n      target: stats.activeTime.target,\n      unit: \"min\",\n      color: \"accent\",\n      percentage: getPercentage(stats.activeTime.current, stats.activeTime.target),\n      bgColor: \"bg-accent/20\",\n      textColor: \"text-accent\",\n      gradientColor: \"from-accent to-blue-600\",\n    },\n  ];\n\n  return (\n    <div className=\"bg-white dark:bg-card rounded-2xl p-6 border border-gray-200 dark:border-border shadow-lg animate-slide-up\" style={{ animationDelay: \"0.2s\" }}>\n      <div className=\"flex items-center space-x-3 mb-6\">\n        <div className=\"w-10 h-10 bg-gradient-to-br from-success to-green-600 rounded-xl flex items-center justify-center\">\n          <Target className=\"text-white\" size={20} />\n        </div>\n        <div>\n          <h3 className=\"text-lg font-bold text-slate-900 dark:text-slate-50\">Today's Goals</h3>\n          <p className=\"text-sm text-slate-600 dark:text-slate-400\">Track your daily targets</p>\n        </div>\n      </div>\n\n      <div className=\"space-y-6\">\n        {goals.map((goal, index) => (\n          <div key={goal.title} className=\"space-y-3 group\" data-testid={`goal-${goal.title.toLowerCase().replace(' ', '-')}`}>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className={`w-8 h-8 ${goal.bgColor} rounded-lg flex items-center justify-center`}>\n                  <goal.icon className={`${goal.textColor} text-sm`} size={16} />\n                </div>\n                <div>\n                  <p className=\"font-medium text-slate-900 dark:text-slate-50\">{goal.title}</p>\n                  <div className=\"flex items-center space-x-1\">\n                    {editingTarget === goal.title.toLowerCase().replace(' ', '') ? (\n                      <div className=\"flex items-center space-x-1\">\n                        <span className=\"text-sm text-slate-600 dark:text-slate-400\">{goal.current} / </span>\n                        <Input\n                          type=\"number\"\n                          value={editValue}\n                          onChange={(e) => setEditValue(e.target.value)}\n                          className=\"w-16 h-6 text-xs p-1\"\n                          min=\"1\"\n                          data-testid={`input-target-${goal.title.toLowerCase().replace(' ', '-')}`}\n                        />\n                        <span className=\"text-xs text-slate-600 dark:text-slate-400\">{goal.unit}</span>\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"h-6 w-6 p-0 hover:bg-green-100 dark:hover:bg-green-900/30\"\n                          onClick={() => saveTarget(goal.title.toLowerCase().replace(' ', ''))}\n                          data-testid={`button-save-target-${goal.title.toLowerCase().replace(' ', '-')}`}\n                        >\n                          <Check size={10} className=\"text-green-600\" />\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"h-6 w-6 p-0 hover:bg-red-100 dark:hover:bg-red-900/30\"\n                          onClick={cancelEdit}\n                          data-testid={`button-cancel-target-${goal.title.toLowerCase().replace(' ', '-')}`}\n                        >\n                          <X size={10} className=\"text-red-600\" />\n                        </Button>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center space-x-1\">\n                        <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                          {goal.current} / {goal.target} {goal.unit}\n                        </p>\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"h-5 w-5 p-0 hover:bg-slate-100 dark:hover:bg-slate-700 opacity-0 group-hover:opacity-100 transition-opacity\"\n                          onClick={() => startEditTarget(goal.title.toLowerCase().replace(' ', ''), goal.target)}\n                          data-testid={`button-edit-target-${goal.title.toLowerCase().replace(' ', '-')}`}\n                        >\n                          <Edit2 size={8} className=\"text-slate-500\" />\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <p className={`text-sm font-medium ${goal.textColor}`}>{goal.percentage}%</p>\n              </div>\n            </div>\n            <div className=\"w-full bg-slate-200 dark:bg-slate-700 rounded-full h-2\">\n              <div\n                className={`bg-gradient-to-r ${goal.gradientColor} h-2 rounded-full animate-progress transition-all duration-1000`}\n                style={{\n                  width: `${goal.percentage}%`,\n                  transformOrigin: \"left\",\n                  animationDelay: `${index * 0.1}s`,\n                }}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"mt-6 pt-6 border-t border-slate-200 dark:border-slate-700\">\n        <div className=\"flex items-center justify-between\">\n          <p className=\"text-sm text-slate-600 dark:text-slate-400\">Overall Progress</p>\n          <p className=\"text-sm font-medium text-success\">{getOverallProgress()}% Complete</p>\n        </div>\n        <div className=\"w-full bg-slate-200 dark:bg-slate-700 rounded-full h-2 mt-2\">\n          <div\n            className=\"bg-gradient-to-r from-success to-green-600 h-2 rounded-full animate-progress\"\n            style={{\n              width: `${getOverallProgress()}%`,\n              transformOrigin: \"left\",\n              animationDelay: \"0.3s\",\n            }}\n            data-testid=\"overall-progress-bar\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":10024},"client/src/components/header.tsx":{"content":"import { useTheme } from \"./theme-provider\";\nimport { Moon, Sun, Menu, BarChart3, Activity, Trophy } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport function Header() {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  return (\n    <header className=\"bg-white/80 dark:bg-card/80 backdrop-blur-lg border-b border-border sticky top-0 z-50 transition-all duration-300\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo and Title */}\n          <div className=\"flex items-center space-x-3 animate-fade-in\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center shadow-lg\">\n              <Activity className=\"text-white text-lg\" size={20} />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold bg-gradient-to-r from-blue-500 to-sky-500 bg-clip-text text-transparent\">\n                FitTrack\n              </h1>\n              <p className=\"text-xs text-muted-foreground\">\n                Your Fitness Journey\n              </p>\n            </div>\n          </div>\n\n          {/* Navigation */}\n          <nav className=\"hidden md:flex space-x-1\">\n            <Button\n              variant=\"ghost\"\n              className=\"px-4 py-2 rounded-lg bg-blue-50 dark:bg-blue-600/20 text-blue-600 dark:text-blue-400 font-medium transition-all duration-200 hover:bg-blue-100 dark:hover:bg-blue-600/30\"\n              data-testid=\"nav-dashboard\"\n            >\n              <BarChart3 className=\"mr-2\" size={16} />\n              Dashboard\n            </Button>\n            <Button\n              variant=\"ghost\"\n              className=\"px-4 py-2 rounded-lg text-muted-foreground font-medium transition-all duration-200 hover:bg-accent hover:text-accent-foreground\"\n              data-testid=\"nav-workouts\"\n            >\n              <Activity className=\"mr-2\" size={16} />\n              Workouts\n            </Button>\n            <Button\n              variant=\"ghost\"\n              className=\"px-4 py-2 rounded-lg text-muted-foreground font-medium transition-all duration-200 hover:bg-accent hover:text-accent-foreground\"\n              data-testid=\"nav-progress\"\n            >\n              <Trophy className=\"mr-2\" size={16} />\n              Progress\n            </Button>\n          </nav>\n\n          {/* Theme Toggle */}\n          <div className=\"flex items-center space-x-3\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={toggleTheme}\n              className=\"p-2 rounded-lg bg-accent text-accent-foreground hover:bg-accent/80 transition-all duration-200 transform hover:scale-105 group\"\n              data-testid=\"button-theme-toggle\"\n            >\n              <Moon className=\"dark:hidden text-lg group-hover:rotate-12 transition-transform\" size={18} />\n              <Sun className=\"hidden dark:inline text-lg group-hover:rotate-12 transition-transform text-yellow-400\" size={18} />\n            </Button>\n            <div className=\"md:hidden\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"p-2 rounded-lg bg-accent text-accent-foreground\"\n                data-testid=\"button-mobile-menu\"\n              >\n                <Menu size={18} />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":3572},"client/src/components/recent-activities.tsx":{"content":"import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { ChevronRight, Clock, Flame, Edit2, Check, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useState } from \"react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { Workout } from \"@shared/schema\";\n\nconst exerciseIcons: Record<string, string> = {\n  running: \"🏃‍♂️\",\n  strength: \"💪\",\n  yoga: \"🧘‍♀️\",\n  cycling: \"🚴‍♂️\",\n  swimming: \"🏊‍♂️\",\n  hiit: \"⚡\",\n};\n\nconst exerciseColors: Record<string, string> = {\n  running: \"from-coral-500 to-coral-600\",\n  strength: \"from-teal-500 to-teal-600\",\n  yoga: \"from-accent to-blue-600\",\n  cycling: \"from-teal-500 to-teal-600\",\n  swimming: \"from-accent to-blue-600\",\n  hiit: \"from-success to-green-600\",\n};\n\nconst intensityColors: Record<string, string> = {\n  low: \"bg-accent/20 text-accent\",\n  medium: \"bg-teal-100 dark:bg-teal-900/30 text-teal-600 dark:text-teal-400\",\n  high: \"bg-coral-100 dark:bg-coral-900/30 text-coral-600 dark:text-coral-400\",\n};\n\nexport function RecentActivities() {\n  const [editingCalories, setEditingCalories] = useState<string | null>(null);\n  const [editValue, setEditValue] = useState<string>(\"\");\n  const queryClient = useQueryClient();\n  \n  const { data: workouts, isLoading } = useQuery<Workout[]>({\n    queryKey: [\"/api/workouts\"],\n  });\n\n  const updateCaloriesMutation = useMutation({\n    mutationFn: async ({ workoutId, calories }: { workoutId: string; calories: number }) => {\n      return apiRequest(\"PATCH\", `/api/workouts/${workoutId}`, { calories });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/workouts\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/workouts/weekly\"] });\n      setEditingCalories(null);\n      setEditValue(\"\");\n    },\n  });\n\n  const startEditCalories = (workoutId: string, currentCalories: number) => {\n    setEditingCalories(workoutId);\n    setEditValue(currentCalories.toString());\n  };\n\n  const saveCalories = (workoutId: string) => {\n    const calories = parseInt(editValue);\n    if (calories && calories > 0) {\n      updateCaloriesMutation.mutate({ workoutId, calories });\n    }\n  };\n\n  const cancelEdit = () => {\n    setEditingCalories(null);\n    setEditValue(\"\");\n  };\n\n  const formatTimeAgo = (date: Date) => {\n    const now = new Date();\n    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));\n    \n    if (diffInHours < 1) return \"Just now\";\n    if (diffInHours < 24) return `${diffInHours} hours ago`;\n    if (diffInHours < 48) return \"Yesterday\";\n    \n    const diffInDays = Math.floor(diffInHours / 24);\n    return `${diffInDays} days ago`;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white dark:bg-card rounded-2xl p-6 border border-gray-200 dark:border-border shadow-lg animate-slide-up\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 bg-slate-200 dark:bg-slate-700 rounded w-1/3 mb-2\" />\n          <div className=\"h-4 bg-slate-200 dark:bg-slate-700 rounded w-1/2 mb-6\" />\n          <div className=\"space-y-4\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"h-16 bg-slate-200 dark:bg-slate-700 rounded-xl\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const recentWorkouts = workouts?.slice(0, 5) || [];\n\n  return (\n    <div className=\"bg-white dark:bg-card rounded-2xl p-6 border border-gray-200 dark:border-border shadow-lg animate-slide-up\" style={{ animationDelay: \"0.2s\" }}>\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h3 className=\"text-xl font-bold text-slate-900 dark:text-slate-50 mb-1\">Recent Activities</h3>\n          <p className=\"text-sm text-slate-600 dark:text-slate-400\">Your latest workouts</p>\n        </div>\n        <Button\n          variant=\"ghost\"\n          className=\"px-4 py-2 bg-coral-50 dark:bg-coral-900/20 text-coral-600 dark:text-coral-400 rounded-lg hover:bg-coral-100 dark:hover:bg-coral-900/30 transition-colors text-sm font-medium\"\n          data-testid=\"button-view-all-activities\"\n        >\n          View All\n        </Button>\n      </div>\n\n      <div className=\"space-y-4 max-h-96 overflow-y-auto pr-2 scrollbar-thin scrollbar-thumb-slate-300 dark:scrollbar-thumb-slate-600 scrollbar-track-transparent\">\n        {recentWorkouts.length === 0 ? (\n          <div className=\"text-center py-8 text-slate-500 dark:text-slate-400\">\n            <p>No workouts yet. Add your first workout to get started!</p>\n          </div>\n        ) : (\n          recentWorkouts.map((workout) => (\n            <div\n              key={workout.id}\n              className=\"flex items-center space-x-4 p-4 bg-slate-50 dark:bg-slate-800/50 rounded-xl hover:bg-slate-100 dark:hover:bg-slate-700/50 transition-all duration-200 group cursor-pointer border border-transparent hover:border-slate-200 dark:hover:border-slate-600\"\n              data-testid={`activity-item-${workout.id}`}\n            >\n              <div className={`w-12 h-12 bg-gradient-to-br ${exerciseColors[workout.exerciseType] || exerciseColors.running} rounded-xl flex items-center justify-center group-hover:scale-105 transition-transform duration-200`}>\n                <span className=\"text-lg\">{exerciseIcons[workout.exerciseType] || \"💪\"}</span>\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center justify-between\">\n                  <h4 className=\"font-semibold text-slate-900 dark:text-slate-50 truncate capitalize\">\n                    {workout.exerciseType.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}\n                  </h4>\n                  <span className=\"text-sm text-slate-500 dark:text-slate-400\">\n                    {formatTimeAgo(new Date(workout.date))}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-4 mt-1\">\n                  <span className=\"text-sm text-slate-600 dark:text-slate-400\">\n                    <Clock className=\"inline mr-1\" size={12} />\n                    {workout.duration} min\n                  </span>\n                  <div className=\"flex items-center space-x-1\">\n                    {editingCalories === workout.id ? (\n                      <div className=\"flex items-center space-x-1\">\n                        <Flame className=\"text-slate-600 dark:text-slate-400\" size={12} />\n                        <Input\n                          type=\"number\"\n                          value={editValue}\n                          onChange={(e) => setEditValue(e.target.value)}\n                          className=\"w-16 h-6 text-xs p-1\"\n                          min=\"1\"\n                          data-testid={`input-calories-${workout.id}`}\n                        />\n                        <span className=\"text-xs text-slate-600 dark:text-slate-400\">cal</span>\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"h-6 w-6 p-0 hover:bg-green-100 dark:hover:bg-green-900/30\"\n                          onClick={() => saveCalories(workout.id)}\n                          disabled={updateCaloriesMutation.isPending}\n                          data-testid={`button-save-calories-${workout.id}`}\n                        >\n                          <Check size={12} className=\"text-green-600\" />\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"h-6 w-6 p-0 hover:bg-red-100 dark:hover:bg-red-900/30\"\n                          onClick={cancelEdit}\n                          data-testid={`button-cancel-calories-${workout.id}`}\n                        >\n                          <X size={12} className=\"text-red-600\" />\n                        </Button>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center space-x-1\">\n                        <span className=\"text-sm text-slate-600 dark:text-slate-400\">\n                          <Flame className=\"inline mr-1\" size={12} />\n                          {workout.calories} cal\n                        </span>\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"h-6 w-6 p-0 hover:bg-slate-100 dark:hover:bg-slate-700 opacity-0 group-hover:opacity-100 transition-opacity\"\n                          onClick={() => startEditCalories(workout.id, workout.calories)}\n                          data-testid={`button-edit-calories-${workout.id}`}\n                        >\n                          <Edit2 size={10} className=\"text-slate-500\" />\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                  <span className={`px-2 py-1 text-xs rounded-full ${intensityColors[workout.intensity]}`}>\n                    {workout.intensity.charAt(0).toUpperCase() + workout.intensity.slice(1)}\n                  </span>\n                </div>\n              </div>\n              <ChevronRight\n                className=\"text-slate-400 group-hover:text-slate-600 dark:group-hover:text-slate-300 transition-colors\"\n                size={16}\n              />\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":9529},"client/src/components/theme-provider.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"dark\" | \"light\" | \"system\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: \"system\",\n  setTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\",\n  storageKey = \"fittrack-ui-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  );\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n\n    root.classList.remove(\"light\", \"dark\");\n\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n        .matches\n        ? \"dark\"\n        : \"light\";\n\n      root.classList.add(systemTheme);\n      return;\n    }\n\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme);\n      setTheme(theme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n\n  return context;\n};\n","size_bytes":1609},"client/src/components/weekly-progress.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { RefreshCw } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport type { Workout } from \"@shared/schema\";\n\ninterface WeeklyData {\n  day: string;\n  calories: number;\n  workouts: number;\n  color: string;\n}\n\nexport function WeeklyProgress() {\n  const { data: weeklyWorkouts, isLoading, refetch } = useQuery<Workout[]>({\n    queryKey: [\"/api/workouts/weekly\"],\n  });\n\n  const getWeeklyData = (): WeeklyData[] => {\n    if (!weeklyWorkouts) return [];\n\n    const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const today = new Date();\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(today.getDate() - today.getDay() + 1); // Start from Monday\n\n    return days.map((day, index) => {\n      const currentDate = new Date(startOfWeek);\n      currentDate.setDate(startOfWeek.getDate() + index);\n      \n      const dayWorkouts = weeklyWorkouts.filter(workout => {\n        const workoutDate = new Date(workout.date);\n        return workoutDate.toDateString() === currentDate.toDateString();\n      });\n\n      const totalCalories = dayWorkouts.reduce((sum, workout) => sum + workout.calories, 0);\n      const workoutCount = dayWorkouts.length;\n\n      // Determine color based on primary exercise type\n      let color = \"from-slate-400 to-slate-500\";\n      if (dayWorkouts.length > 0) {\n        const primaryType = dayWorkouts[0].exerciseType;\n        switch (primaryType) {\n          case \"running\":\n          case \"strength\":\n            color = \"from-coral-500 to-coral-400\";\n            break;\n          case \"cycling\":\n          case \"swimming\":\n            color = \"from-teal-500 to-teal-400\";\n            break;\n          case \"yoga\":\n            color = \"from-accent to-blue-400\";\n            break;\n          case \"hiit\":\n            color = \"from-success to-green-400\";\n            break;\n          default:\n            color = \"from-coral-500 to-coral-400\";\n        }\n      }\n\n      return {\n        day,\n        calories: totalCalories,\n        workouts: workoutCount,\n        color,\n      };\n    });\n  };\n\n  const weeklyData = getWeeklyData();\n  const maxCalories = Math.max(...weeklyData.map(d => d.calories), 100);\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white dark:bg-card rounded-2xl p-6 border border-gray-200 dark:border-border shadow-lg animate-slide-up\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 bg-slate-200 dark:bg-slate-700 rounded w-1/3 mb-2\" />\n          <div className=\"h-4 bg-slate-200 dark:bg-slate-700 rounded w-1/2 mb-6\" />\n          <div className=\"h-64 bg-slate-200 dark:bg-slate-700 rounded\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-card rounded-2xl p-6 border border-gray-200 dark:border-border shadow-lg animate-slide-up\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h3 className=\"text-xl font-bold text-slate-900 dark:text-slate-50 mb-1\">Weekly Progress</h3>\n          <p className=\"text-sm text-slate-600 dark:text-slate-400\">Your activity over the last 7 days</p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={() => refetch()}\n            className=\"p-2 rounded-lg bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-400 hover:bg-slate-200 dark:hover:bg-slate-600 transition-colors\"\n            data-testid=\"button-refresh-weekly\"\n          >\n            <RefreshCw size={14} />\n          </Button>\n          <Select defaultValue=\"7days\">\n            <SelectTrigger className=\"bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-400 rounded-lg px-3 py-1 text-sm border-0 focus:ring-2 focus:ring-coral-500\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"7days\">Last 7 days</SelectItem>\n              <SelectItem value=\"30days\">Last 30 days</SelectItem>\n              <SelectItem value=\"3months\">Last 3 months</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      {/* Chart Area */}\n      <div className=\"h-64 relative\" data-testid=\"weekly-progress-chart\">\n        <div className=\"absolute inset-0 flex items-end justify-between px-2\">\n          {weeklyData.map((day, index) => (\n            <div key={day.day} className=\"flex flex-col items-center space-y-2 flex-1\">\n              <div className=\"w-full max-w-8 bg-slate-200 dark:bg-slate-700 rounded-t-lg relative overflow-hidden\">\n                <div\n                  className={`bg-gradient-to-t ${day.color} rounded-t-lg transition-all duration-1000 ease-out hover:opacity-80`}\n                  style={{\n                    height: `${(day.calories / maxCalories) * 100}%`,\n                    minHeight: day.calories > 0 ? '8px' : '0px',\n                    animationDelay: `${index * 0.1}s`,\n                  }}\n                  data-testid={`chart-bar-${day.day.toLowerCase()}`}\n                />\n              </div>\n              <div className={`text-xs font-medium ${day.day === 'Sun' && new Date().getDay() === 0 ? 'text-coral-500 dark:text-coral-400 font-bold' : 'text-slate-600 dark:text-slate-400'}`}>\n                {day.day}\n              </div>\n              <div className=\"text-xs text-slate-500 dark:text-slate-500\">\n                {day.calories}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Legend */}\n      <div className=\"flex justify-center space-x-6 mt-6 pt-6 border-t border-slate-200 dark:border-slate-700\">\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-3 h-3 bg-gradient-to-r from-coral-500 to-coral-400 rounded-full\" />\n          <span className=\"text-xs text-slate-600 dark:text-slate-400\">Strength</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-3 h-3 bg-gradient-to-r from-teal-500 to-teal-400 rounded-full\" />\n          <span className=\"text-xs text-slate-600 dark:text-slate-400\">Cardio</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-3 h-3 bg-gradient-to-r from-accent to-blue-400 rounded-full\" />\n          <span className=\"text-xs text-slate-600 dark:text-slate-400\">Yoga</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-3 h-3 bg-gradient-to-r from-success to-green-400 rounded-full\" />\n          <span className=\"text-xs text-slate-600 dark:text-slate-400\">HIIT</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6795},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/mock-storage.ts":{"content":"// This file provides localStorage-based persistence for the FitTrack app\n// It simulates the backend functionality on the frontend\n\nimport type { Workout, Exercise, Goal } from \"@shared/schema\";\n\nconst STORAGE_KEYS = {\n  WORKOUTS: \"fittrack_workouts\",\n  EXERCISES: \"fittrack_exercises\", \n  GOALS: \"fittrack_goals\",\n} as const;\n\nexport class MockStorage {\n  private static instance: MockStorage;\n\n  static getInstance(): MockStorage {\n    if (!MockStorage.instance) {\n      MockStorage.instance = new MockStorage();\n    }\n    return MockStorage.instance;\n  }\n\n  private constructor() {\n    this.initializeData();\n  }\n\n  private initializeData() {\n    // Initialize exercises if not already present\n    if (!localStorage.getItem(STORAGE_KEYS.EXERCISES)) {\n      const defaultExercises: Exercise[] = [\n        { id: \"1\", name: \"Running\", category: \"cardio\", caloriesPerMinute: 8, emoji: \"🏃‍♂️\" },\n        { id: \"2\", name: \"Push-ups\", category: \"strength\", caloriesPerMinute: 5, emoji: \"💪\" },\n        { id: \"3\", name: \"Yoga\", category: \"flexibility\", caloriesPerMinute: 3, emoji: \"🧘‍♀️\" },\n        { id: \"4\", name: \"HIIT\", category: \"cardio\", caloriesPerMinute: 12, emoji: \"⚡\" },\n        { id: \"5\", name: \"Cycling\", category: \"cardio\", caloriesPerMinute: 6, emoji: \"🚴‍♂️\" },\n        { id: \"6\", name: \"Swimming\", category: \"cardio\", caloriesPerMinute: 10, emoji: \"🏊‍♂️\" },\n        { id: \"7\", name: \"Weight Training\", category: \"strength\", caloriesPerMinute: 7, emoji: \"🏋️‍♂️\" },\n        { id: \"8\", name: \"Pilates\", category: \"flexibility\", caloriesPerMinute: 4, emoji: \"🤸‍♀️\" },\n      ];\n      localStorage.setItem(STORAGE_KEYS.EXERCISES, JSON.stringify(defaultExercises));\n    }\n\n    // Initialize empty arrays for workouts and goals if not present\n    if (!localStorage.getItem(STORAGE_KEYS.WORKOUTS)) {\n      localStorage.setItem(STORAGE_KEYS.WORKOUTS, JSON.stringify([]));\n    }\n    if (!localStorage.getItem(STORAGE_KEYS.GOALS)) {\n      localStorage.setItem(STORAGE_KEYS.GOALS, JSON.stringify([]));\n    }\n  }\n\n  getWorkouts(): Workout[] {\n    const data = localStorage.getItem(STORAGE_KEYS.WORKOUTS);\n    return data ? JSON.parse(data) : [];\n  }\n\n  addWorkout(workout: Omit<Workout, \"id\" | \"userId\" | \"date\">): Workout {\n    const workouts = this.getWorkouts();\n    const newWorkout: Workout = {\n      ...workout,\n      id: Date.now().toString(),\n      userId: \"demo-user\",\n      date: new Date(),\n    };\n    workouts.unshift(newWorkout); // Add to beginning for chronological order\n    localStorage.setItem(STORAGE_KEYS.WORKOUTS, JSON.stringify(workouts));\n    return newWorkout;\n  }\n\n  getWeeklyWorkouts(): Workout[] {\n    const workouts = this.getWorkouts();\n    const oneWeekAgo = new Date();\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n    \n    return workouts.filter(workout => new Date(workout.date) >= oneWeekAgo);\n  }\n\n  getExercises(): Exercise[] {\n    const data = localStorage.getItem(STORAGE_KEYS.EXERCISES);\n    return data ? JSON.parse(data) : [];\n  }\n\n  addExercise(exercise: Omit<Exercise, \"id\">): Exercise {\n    const exercises = this.getExercises();\n    const newExercise: Exercise = {\n      ...exercise,\n      id: Date.now().toString(),\n    };\n    exercises.push(newExercise);\n    localStorage.setItem(STORAGE_KEYS.EXERCISES, JSON.stringify(exercises));\n    return newExercise;\n  }\n\n  getGoals(): Goal[] {\n    const data = localStorage.getItem(STORAGE_KEYS.GOALS);\n    return data ? JSON.parse(data) : [];\n  }\n\n  addGoal(goal: Omit<Goal, \"id\" | \"userId\" | \"current\" | \"date\">): Goal {\n    const goals = this.getGoals();\n    const newGoal: Goal = {\n      ...goal,\n      id: Date.now().toString(),\n      userId: \"demo-user\",\n      current: 0,\n      date: new Date(),\n    };\n    goals.push(newGoal);\n    localStorage.setItem(STORAGE_KEYS.GOALS, JSON.stringify(goals));\n    return newGoal;\n  }\n\n  updateGoal(goalId: string, current: number): Goal | undefined {\n    const goals = this.getGoals();\n    const goalIndex = goals.findIndex(goal => goal.id === goalId);\n    \n    if (goalIndex !== -1) {\n      goals[goalIndex].current = current;\n      localStorage.setItem(STORAGE_KEYS.GOALS, JSON.stringify(goals));\n      return goals[goalIndex];\n    }\n    \n    return undefined;\n  }\n}\n\nexport const mockStorage = MockStorage.getInstance();\n","size_bytes":4318},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Plus } from \"lucide-react\";\nimport { Header } from \"@/components/header\";\nimport { AddWorkoutForm } from \"@/components/add-workout-form\";\nimport { WeeklyProgress } from \"@/components/weekly-progress\";\nimport { RecentActivities } from \"@/components/recent-activities\";\nimport { FitnessGoals } from \"@/components/fitness-goals\";\nimport { ExerciseLibrary } from \"@/components/exercise-library\";\nimport { Button } from \"@/components/ui/button\";\nimport type { Workout } from \"@shared/schema\";\n\nexport default function Dashboard() {\n  const { data: workouts } = useQuery<Workout[]>({\n    queryKey: [\"/api/workouts\"],\n  });\n\n  const getTodayStats = () => {\n    if (!workouts) return { workouts: 0, calories: 0, duration: 0 };\n\n    const today = new Date();\n    const todayStart = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    const todayEnd = new Date(todayStart.getTime() + 24 * 60 * 60 * 1000);\n\n    const todayWorkouts = workouts.filter(workout => {\n      const workoutDate = new Date(workout.date);\n      return workoutDate >= todayStart && workoutDate < todayEnd;\n    });\n\n    return {\n      workouts: todayWorkouts.length,\n      calories: todayWorkouts.reduce((sum, workout) => sum + workout.calories, 0),\n      duration: todayWorkouts.reduce((sum, workout) => sum + workout.duration, 0),\n    };\n  };\n\n  const todayStats = getTodayStats();\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-background transition-colors duration-300\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 animate-fade-in\">\n        {/* Welcome Section */}\n        <div className=\"mb-8\">\n          <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center space-y-4 sm:space-y-0\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-2\">\n                Welcome back, <span className=\"text-blue-500\">Alex</span>! 👋\n              </h2>\n              <p className=\"text-muted-foreground\">Let's crush your fitness goals today</p>\n            </div>\n            <div className=\"flex items-center space-x-2 bg-gradient-to-r from-blue-500/10 to-sky-500/10 dark:from-blue-500/20 dark:to-sky-500/20 px-4 py-2 rounded-xl border border-blue-200 dark:border-blue-800\">\n              <span className=\"text-blue-500\">🔥</span>\n              <span className=\"text-sm font-medium\">🔥 7 day streak!</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <div className=\"bg-white dark:bg-slate-900 rounded-2xl p-6 border border-gray-200 dark:border-blue-800/50 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 animate-slide-up group\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-200\">\n                <span className=\"text-white text-lg\">🏃‍♂️</span>\n              </div>\n              <span className=\"text-xs font-medium text-muted-foreground bg-accent px-2 py-1 rounded-full\">\n                Today\n              </span>\n            </div>\n            <h3 className=\"text-2xl font-bold text-foreground mb-1\">\n              {todayStats.workouts}\n            </h3>\n            <p className=\"text-sm text-muted-foreground\">Workouts</p>\n            <div className=\"mt-3 flex items-center text-xs\">\n              <span className=\"text-success mr-1\">↗</span>\n              <span className=\"text-success font-medium\">+15%</span>\n              <span className=\"text-muted-foreground ml-1\">vs yesterday</span>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-slate-900 rounded-2xl p-6 border border-gray-200 dark:border-blue-800/50 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 animate-slide-up group\" style={{ animationDelay: \"0.1s\" }}>\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"w-12 h-12 bg-gradient-to-br from-sky-500 to-sky-600 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-200\">\n                <span className=\"text-white text-lg\">🔥</span>\n              </div>\n              <span className=\"text-xs font-medium text-muted-foreground bg-accent px-2 py-1 rounded-full\">\n                Today\n              </span>\n            </div>\n            <h3 className=\"text-2xl font-bold text-foreground mb-1\">\n              {todayStats.calories}\n            </h3>\n            <p className=\"text-sm text-muted-foreground\">Calories Burned</p>\n            <div className=\"mt-3 flex items-center text-xs\">\n              <span className=\"text-success mr-1\">↗</span>\n              <span className=\"text-success font-medium\">+8%</span>\n              <span className=\"text-muted-foreground ml-1\">vs yesterday</span>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-slate-900 rounded-2xl p-6 border border-gray-200 dark:border-blue-800/50 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 animate-slide-up group\" style={{ animationDelay: \"0.2s\" }}>\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"w-12 h-12 bg-gradient-to-br from-primary to-blue-600 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-200\">\n                <span className=\"text-white text-lg\">⏱️</span>\n              </div>\n              <span className=\"text-xs font-medium text-muted-foreground bg-accent px-2 py-1 rounded-full\">\n                Today\n              </span>\n            </div>\n            <h3 className=\"text-2xl font-bold text-foreground mb-1\">\n              {todayStats.duration}\n            </h3>\n            <p className=\"text-sm text-muted-foreground\">Minutes Active</p>\n            <div className=\"mt-3 flex items-center text-xs\">\n              <span className=\"text-success mr-1\">↗</span>\n              <span className=\"text-success font-medium\">+22%</span>\n              <span className=\"text-muted-foreground ml-1\">vs yesterday</span>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-slate-900 rounded-2xl p-6 border border-gray-200 dark:border-blue-800/50 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 animate-slide-up group\" style={{ animationDelay: \"0.3s\" }}>\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"w-12 h-12 bg-gradient-to-br from-success to-green-600 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-200\">\n                <span className=\"text-white text-lg\">🏆</span>\n              </div>\n              <span className=\"text-xs font-medium text-muted-foreground bg-accent px-2 py-1 rounded-full\">\n                This Week\n              </span>\n            </div>\n            <h3 className=\"text-2xl font-bold text-foreground mb-1\">3/4</h3>\n            <p className=\"text-sm text-muted-foreground\">Goals Achieved</p>\n            <div className=\"mt-3 w-full bg-muted rounded-full h-2\">\n              <div\n                className=\"bg-gradient-to-r from-success to-green-600 h-2 rounded-full animate-progress\"\n                style={{ width: \"75%\", transformOrigin: \"left\" }}\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Main Content Grid - 2x2 Layout */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {/* Top Left */}\n          <WeeklyProgress />\n          \n          {/* Top Right */}\n          <AddWorkoutForm />\n          \n          {/* Bottom Left */}\n          <RecentActivities />\n          \n          {/* Bottom Right */}\n          <FitnessGoals />\n        </div>\n\n        {/* Exercise Library - Full Width Below Grid */}\n        <div className=\"mt-8\">\n          <ExerciseLibrary />\n        </div>\n      </main>\n\n      {/* Floating Action Button for Mobile */}\n      <div className=\"fixed bottom-6 right-6 md:hidden\">\n        <Button\n          size=\"icon\"\n          className=\"w-14 h-14 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white rounded-full shadow-2xl hover:shadow-3xl transition-all duration-300 transform hover:scale-110 focus:outline-none focus:ring-4 focus:ring-blue-500/30\"\n          onClick={() => {\n            const addWorkoutForm = document.querySelector('[data-testid=\"add-workout-form\"]');\n            if (addWorkoutForm) {\n              addWorkoutForm.scrollIntoView({ behavior: 'smooth', block: 'center' });\n              // Focus the first input in the form\n              const firstInput = addWorkoutForm.querySelector('input, select, textarea') as HTMLElement;\n              if (firstInput) {\n                setTimeout(() => firstInput.focus(), 500);\n              }\n            }\n          }}\n          data-testid=\"fab-add-workout\"\n        >\n          <Plus size={20} />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9293},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"fit-track/public/src/App.css":{"content":"/* Additional styles specific to the App component */\n.App {\n  text-align: center;\n}\n\n.App-logo {\n  height: 40vmin;\n  pointer-events: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  .App-logo {\n    animation: App-logo-spin infinite 20s linear;\n  }\n}\n\n.App-header {\n  background-color: #282c34;\n  padding: 20px;\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}","size_bytes":487},"fit-track/public/src/App.tsx":{"content":"import React from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { Router, Route } from 'wouter';\nimport { ThemeProvider } from './hooks/use-theme';\nimport { Toaster } from './components/ui/toaster';\n\n// Pages\nimport Dashboard from './pages/dashboard';\nimport NotFound from './pages/not-found';\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 1000 * 60 * 5, // 5 minutes\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider defaultTheme=\"dark\" storageKey=\"fittrack-ui-theme\">\n        <Router>\n          <div className=\"min-h-screen bg-gradient-main\">\n            <Route path=\"/\" component={Dashboard} />\n            <Route path=\"*\" component={NotFound} />\n            <Toaster />\n          </div>\n        </Router>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","size_bytes":992},"fit-track/public/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96%;\n    --secondary-foreground: 222.2 84% 4.9%;\n    --muted: 210 40% 96%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --accent: 210 40% 96%;\n    --accent-foreground: 222.2 84% 4.9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 222.2 84% 4.9%;\n    --radius: 0.75rem;\n    \n    /* Light theme gradients */\n    --gradient-primary: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);\n    --gradient-secondary: linear-gradient(135deg, #ec4899 0%, #f59e0b 100%);\n    --gradient-success: linear-gradient(135deg, #10b981 0%, #06b6d4 100%);\n    --gradient-warning: linear-gradient(135deg, #f59e0b 0%, #ef4444 100%);\n    --gradient-danger: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n    --gradient-light: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n    --gradient-dark: linear-gradient(135deg, #64748b 0%, #475569 100%);\n    \n    --bg-gradient-main: linear-gradient(135deg, #ddd6fe 0%, #c7d2fe 50%, #dbeafe 100%);\n    --bg-gradient-subtle: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);\n    --bg-gradient-card: linear-gradient(135deg, rgba(248,250,252,0.9) 0%, rgba(241,245,249,0.7) 100%);\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n    --primary: 217.2 91.2% 59.8%;\n    --primary-foreground: 222.2 84% 4.9%;\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 224.3 76.3% 94.1%;\n\n    /* Dark theme gradients */\n    --gradient-primary: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);\n    --gradient-secondary: linear-gradient(135deg, #ec4899 0%, #ef4444 100%);\n    --gradient-success: linear-gradient(135deg, #059669 0%, #0891b2 100%);\n    --gradient-warning: linear-gradient(135deg, #d97706 0%, #dc2626 100%);\n    --gradient-danger: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);\n    --gradient-dark: linear-gradient(135deg, #111827 0%, #1f2937 100%);\n    --gradient-light: linear-gradient(135deg, #374151 0%, #4b5563 100%);\n    \n    --bg-gradient-main: linear-gradient(135deg, #1e1b4b 0%, #312e81 50%, #581c87 100%);\n    --bg-gradient-subtle: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);\n    --bg-gradient-card: linear-gradient(135deg, rgba(30,41,59,0.9) 0%, rgba(15,23,42,0.7) 100%);\n  }\n}\n\n@layer components {\n  /* Gradient utility classes */\n  .gradient-primary {\n    background: var(--gradient-primary);\n  }\n  \n  .gradient-secondary {\n    background: var(--gradient-secondary);\n  }\n  \n  .gradient-success {\n    background: var(--gradient-success);\n  }\n  \n  .gradient-warning {\n    background: var(--gradient-warning);\n  }\n  \n  .gradient-danger {\n    background: var(--gradient-danger);\n  }\n\n  /* Background gradient classes */\n  .bg-gradient-main {\n    background: var(--bg-gradient-main);\n  }\n  \n  .bg-gradient-subtle {\n    background: var(--bg-gradient-subtle);\n  }\n  \n  .bg-gradient-card {\n    background: var(--bg-gradient-card);\n    backdrop-filter: blur(10px);\n  }\n\n  /* Enhanced glass effect */\n  .glass-effect {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n  \n  .dark .glass-effect {\n    background: rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  }\n}\n\n/* Custom Scrollbar Styles */\n.recent-activities-scroll {\n  scrollbar-width: thin;\n  scrollbar-color: rgba(99, 102, 241, 0.4) transparent;\n}\n\n.recent-activities-scroll::-webkit-scrollbar {\n  width: 6px;\n}\n\n.recent-activities-scroll::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.recent-activities-scroll::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, #6366f1 0%, #a855f7 100%);\n  border-radius: 10px;\n  border: none;\n}\n\n.recent-activities-scroll::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, #4f46e5 0%, #9333ea 100%);\n}\n\n.dark .recent-activities-scroll::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, rgba(99, 102, 241, 0.6) 0%, rgba(168, 85, 247, 0.6) 100%);\n}\n\n.dark .recent-activities-scroll::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, rgba(79, 70, 229, 0.8) 0%, rgba(147, 51, 234, 0.8) 100%);\n}\n\n* {\n  border-color: hsl(var(--border));\n}\n\nbody {\n  background-color: hsl(var(--background));\n  color: hsl(var(--foreground));\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}","size_bytes":5445},"fit-track/public/src/index.tsx":{"content":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);","size_bytes":273},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"fit-track/public/src/components/add-workout-form.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Plus, Zap, Clock, Flame, Calendar, FileText, Send, Sparkles } from \"lucide-react\";\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\nimport { Label } from \"./ui/label\";\nimport { Textarea } from \"./ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { useToast } from \"../hooks/use-toast\";\nimport { insertWorkoutSchema, type InsertWorkout } from \"../shared/schema\";\nimport { mockStorage } from \"../data/mockStorage\";\n\nconst exerciseOptions = [\n  { name: \"Running\", icon: \"🏃\", color: \"bg-gradient-to-br from-blue-500 to-cyan-500\" },\n  { name: \"Cycling\", icon: \"🚴\", color: \"bg-gradient-to-br from-green-500 to-teal-500\" },\n  { name: \"Swimming\", icon: \"🏊\", color: \"bg-gradient-to-br from-blue-400 to-indigo-500\" },\n  { name: \"Weight Training\", icon: \"🏋️\", color: \"bg-gradient-to-br from-red-500 to-orange-500\" },\n  { name: \"Yoga\", icon: \"🧘\", color: \"bg-gradient-to-br from-purple-500 to-pink-500\" },\n  { name: \"Hiking\", icon: \"🥾\", color: \"bg-gradient-to-br from-emerald-500 to-green-600\" },\n  { name: \"Pilates\", icon: \"🤸\", color: \"bg-gradient-to-br from-violet-500 to-purple-600\" },\n  { name: \"Boxing\", icon: \"🥊\", color: \"bg-gradient-to-br from-red-600 to-rose-600\" },\n  { name: \"Other\", icon: \"⚡\", color: \"bg-gradient-to-br from-gray-500 to-slate-600\" }\n];\n\nconst intensityOptions = [\n  { name: \"Low\", icon: \"🌙\", color: \"text-blue-600\", bg: \"bg-blue-50 dark:bg-blue-900/20\" },\n  { name: \"Moderate\", icon: \"☀️\", color: \"text-green-600\", bg: \"bg-green-50 dark:bg-green-900/20\" },\n  { name: \"High\", icon: \"🔥\", color: \"text-orange-600\", bg: \"bg-orange-50 dark:bg-orange-900/20\" },\n  { name: \"Very High\", icon: \"⚡\", color: \"text-red-600\", bg: \"bg-red-50 dark:bg-red-900/20\" }\n];\n\nexport function AddWorkoutForm() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm({\n    resolver: zodResolver(insertWorkoutSchema),\n    defaultValues: {\n      exerciseType: \"\",\n      duration: 0,\n      caloriesBurned: 0,\n      intensity: \"Moderate\",\n      notes: \"\",\n      workoutDate: new Date().toISOString().slice(0, 16),\n    },\n  });\n\n  const createWorkoutMutation = useMutation({\n    mutationFn: async (data: InsertWorkout) => {\n      return await mockStorage.createWorkout(\"mock-user-id\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"workouts\"] });\n      queryClient.invalidateQueries({ queryKey: [\"stats\"] });\n      toast({\n        title: \"Workout Added Successfully! 🎉\",\n        description: \"Your training session has been logged beautifully.\",\n      });\n      form.reset({\n        exerciseType: \"\",\n        duration: 0,\n        caloriesBurned: 0,\n        intensity: \"Moderate\",\n        notes: \"\",\n        workoutDate: new Date().toISOString().slice(0, 16),\n      });\n      setIsSubmitting(false);\n    },\n    onError: () => {\n      toast({\n        title: \"Error Adding Workout\",\n        description: \"Something went wrong. Please try again.\",\n        variant: \"destructive\",\n      });\n      setIsSubmitting(false);\n    },\n  });\n\n  const onSubmit = (data: any) => {\n    setIsSubmitting(true);\n    // Convert the form data to match InsertWorkout type\n    const workoutData: InsertWorkout = {\n      ...data,\n      intensity: data.intensity as \"Low\" | \"Moderate\" | \"High\" | \"Very High\",\n      workoutDate: new Date(data.workoutDate)\n    };\n    createWorkoutMutation.mutate(workoutData);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Beautiful Form Header */}\n      <div className=\"text-center\">\n        <div className=\"flex items-center justify-center gap-2 mb-2\">\n          <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center\">\n            <Sparkles className=\"w-4 h-4 text-white\" />\n          </div>\n          <h3 className=\"text-lg font-bold text-gray-900 dark:text-white\">\n            New Workout Session\n          </h3>\n        </div>\n        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n          Log your amazing training session ✨\n        </p>\n      </div>\n\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        {/* Exercise Type - Gorgeous Card Layout */}\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center gap-2\">\n            <Zap className=\"w-4 h-4 text-blue-500\" />\n            <Label className=\"text-sm font-semibold text-gray-900 dark:text-white\">Exercise Type</Label>\n          </div>\n          \n          <Select value={form.watch(\"exerciseType\")} onValueChange={(value) => form.setValue(\"exerciseType\", value)}>\n            <SelectTrigger className=\"h-14 bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 border-blue-200 dark:border-blue-700 rounded-2xl\">\n              <SelectValue placeholder=\"Choose your exercise\" />\n            </SelectTrigger>\n            <SelectContent className=\"rounded-2xl\">\n              {exerciseOptions.map((exercise) => (\n                <SelectItem key={exercise.name} value={exercise.name} className=\"rounded-xl my-1\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className={`w-8 h-8 ${exercise.color} rounded-lg flex items-center justify-center text-white font-medium shadow-md`}>\n                      {exercise.icon}\n                    </div>\n                    <span className=\"font-medium\">{exercise.name}</span>\n                  </div>\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* Date & Time - Beautiful Input */}\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center gap-2\">\n            <Calendar className=\"w-4 h-4 text-green-500\" />\n            <Label className=\"text-sm font-semibold text-gray-900 dark:text-white\">Date & Time</Label>\n          </div>\n          <Input\n            type=\"datetime-local\"\n            {...form.register(\"workoutDate\")}\n            className=\"h-14 bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 border-green-200 dark:border-green-700 rounded-2xl text-lg\"\n          />\n        </div>\n\n        {/* Duration & Calories - Side by Side */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center gap-2\">\n              <Clock className=\"w-4 h-4 text-purple-500\" />\n              <Label className=\"text-sm font-semibold text-gray-900 dark:text-white\">Duration (min)</Label>\n            </div>\n            <Input\n              type=\"number\"\n              placeholder=\"30\"\n              {...form.register(\"duration\", { valueAsNumber: true })}\n              className=\"h-14 bg-gradient-to-br from-purple-50 to-violet-50 dark:from-purple-900/20 dark:to-violet-900/20 border-purple-200 dark:border-purple-700 rounded-2xl text-lg text-center font-bold\"\n            />\n          </div>\n          \n          <div className=\"space-y-3\">\n            <div className=\"flex items-center gap-2\">\n              <Flame className=\"w-4 h-4 text-orange-500\" />\n              <Label className=\"text-sm font-semibold text-gray-900 dark:text-white\">Calories</Label>\n            </div>\n            <Input\n              type=\"number\"\n              placeholder=\"300\"\n              {...form.register(\"caloriesBurned\", { valueAsNumber: true })}\n              className=\"h-14 bg-gradient-to-br from-orange-50 to-red-50 dark:from-orange-900/20 dark:to-red-900/20 border-orange-200 dark:border-orange-700 rounded-2xl text-lg text-center font-bold\"\n            />\n          </div>\n        </div>\n\n        {/* Intensity - Beautiful Selection */}\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center gap-2\">\n            <Zap className=\"w-4 h-4 text-yellow-500\" />\n            <Label className=\"text-sm font-semibold text-gray-900 dark:text-white\">Intensity Level</Label>\n          </div>\n          \n          <div className=\"grid grid-cols-2 gap-2\">\n            {intensityOptions.map((intensity) => (\n              <button\n                key={intensity.name}\n                type=\"button\"\n                onClick={() => form.setValue(\"intensity\", intensity.name)}\n                className={`p-4 rounded-2xl transition-all duration-300 border-2 ${\n                  form.watch(\"intensity\") === intensity.name\n                    ? `${intensity.bg} border-current ${intensity.color} scale-105 shadow-lg`\n                    : \"bg-gray-50 dark:bg-gray-800 border-gray-200 dark:border-gray-700 hover:scale-102\"\n                }`}\n              >\n                <div className=\"text-center\">\n                  <div className=\"text-2xl mb-1\">{intensity.icon}</div>\n                  <div className={`text-sm font-bold ${form.watch(\"intensity\") === intensity.name ? intensity.color : \"text-gray-600 dark:text-gray-400\"}`}>\n                    {intensity.name}\n                  </div>\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Notes - Beautiful Textarea */}\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center gap-2\">\n            <FileText className=\"w-4 h-4 text-indigo-500\" />\n            <Label className=\"text-sm font-semibold text-gray-900 dark:text-white\">Notes (Optional)</Label>\n          </div>\n          <Textarea\n            placeholder=\"How did this workout feel? Any achievements or observations...\"\n            {...form.register(\"notes\")}\n            className=\"min-h-[80px] bg-gradient-to-br from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 border-indigo-200 dark:border-indigo-700 rounded-2xl resize-none\"\n          />\n        </div>\n\n        {/* Submit Button - Gorgeous */}\n        <Button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className=\"w-full h-14 bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 hover:from-blue-700 hover:via-purple-700 hover:to-pink-700 text-white font-bold rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\"\n        >\n          {isSubmitting ? (\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n              <span>Adding Workout...</span>\n            </div>\n          ) : (\n            <div className=\"flex items-center gap-2\">\n              <Send className=\"w-5 h-5\" />\n              <span>Log This Workout</span>\n              <Sparkles className=\"w-5 h-5\" />\n            </div>\n          )}\n        </Button>\n      </form>\n    </div>\n  );\n}","size_bytes":11140},"fit-track/public/src/components/exercise-library.tsx":{"content":"import React from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Zap, Dumbbell, Heart, Clock, Flame, Star, Trophy, Activity } from \"lucide-react\";\nimport { type Exercise } from \"../shared/schema\";\nimport { mockStorage } from \"../data/mockStorage\";\n\nconst getCategoryIcon = (category: string) => {\n  switch (category.toLowerCase()) {\n    case \"cardio\":\n      return <Zap className=\"w-5 h-5 text-white\" />;\n    case \"strength\":\n      return <Dumbbell className=\"w-5 h-5 text-white\" />;\n    case \"flexibility\":\n      return <Heart className=\"w-5 h-5 text-white\" />;\n    default:\n      return <Activity className=\"w-5 h-5 text-white\" />;\n  }\n};\n\nconst getCategoryStyles = (category: string) => {\n  switch (category.toLowerCase()) {\n    case \"cardio\":\n      return {\n        gradient: \"bg-gradient-to-br from-red-500 to-orange-500\",\n        bgGradient: \"bg-gradient-to-br from-red-50 to-orange-50 dark:from-red-900/20 dark:to-orange-900/20\",\n        textColor: \"text-red-700 dark:text-red-300\",\n        borderColor: \"border-red-200/50 dark:border-red-700/50\"\n      };\n    case \"strength\":\n      return {\n        gradient: \"bg-gradient-to-br from-blue-500 to-indigo-500\",\n        bgGradient: \"bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20\",\n        textColor: \"text-blue-700 dark:text-blue-300\",\n        borderColor: \"border-blue-200/50 dark:border-blue-700/50\"\n      };\n    case \"flexibility\":\n      return {\n        gradient: \"bg-gradient-to-br from-purple-500 to-pink-500\",\n        bgGradient: \"bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20\",\n        textColor: \"text-purple-700 dark:text-purple-300\",\n        borderColor: \"border-purple-200/50 dark:border-purple-700/50\"\n      };\n    default:\n      return {\n        gradient: \"bg-gradient-to-br from-green-500 to-teal-500\",\n        bgGradient: \"bg-gradient-to-br from-green-50 to-teal-50 dark:from-green-900/20 dark:to-teal-900/20\",\n        textColor: \"text-green-700 dark:text-green-300\",\n        borderColor: \"border-green-200/50 dark:border-green-700/50\"\n      };\n  }\n};\n\nexport function ExerciseLibrary() {\n  const { data: exercises = [], isLoading } = useQuery<Exercise[]>({\n    queryKey: [\"exercises\"],\n    queryFn: () => mockStorage.getExercises(),\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        {[1, 2, 3, 4].map((i) => (\n          <div\n            key={i}\n            className=\"animate-pulse flex items-center justify-between p-4 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 rounded-2xl\"\n          >\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-12 h-12 bg-gray-300 dark:bg-gray-600 rounded-2xl\"></div>\n              <div className=\"space-y-2\">\n                <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-24\"></div>\n                <div className=\"h-3 bg-gray-300 dark:bg-gray-600 rounded w-16\"></div>\n              </div>\n            </div>\n            <div className=\"h-6 bg-gray-300 dark:bg-gray-600 rounded w-20\"></div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  const popularExercises = exercises.slice(0, 6);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Beautiful Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-10 h-10 bg-gradient-to-br from-pink-500 to-rose-500 rounded-2xl flex items-center justify-center shadow-lg\">\n            <Heart className=\"w-5 h-5 text-white\" />\n          </div>\n          <div>\n            <h3 className=\"text-lg font-bold text-gray-900 dark:text-white\">\n              Exercise Library\n            </h3>\n            <p className=\"text-sm text-pink-600 dark:text-pink-400 font-medium\">Discover amazing workouts! 💪</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Stunning Exercise Cards */}\n      <div className=\"space-y-3\">\n        {popularExercises.map((exercise) => {\n          const styles = getCategoryStyles(exercise.category);\n          const categoryIcon = getCategoryIcon(exercise.category);\n          \n          return (\n            <div\n              key={exercise.name}\n              className={`group relative ${styles.bgGradient} p-4 rounded-2xl transition-all duration-300 hover:scale-[1.02] shadow-lg border ${styles.borderColor} hover:shadow-xl`}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-4\">\n                  {/* Category Icon */}\n                  <div className={`w-12 h-12 ${styles.gradient} rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300`}>\n                    {categoryIcon}\n                  </div>\n                  \n                  {/* Exercise Info */}\n                  <div className=\"space-y-1\">\n                    <h4 className={`text-lg font-bold ${styles.textColor}`}>\n                      {exercise.name}\n                    </h4>\n                    <div className=\"flex items-center gap-3\">\n                      <div className={`flex items-center gap-1 px-3 py-1 rounded-full text-xs font-medium ${styles.textColor} bg-white/50 dark:bg-black/20`}>\n                        <span className=\"capitalize\">{exercise.category}</span>\n                      </div>\n                      <div className={`flex items-center gap-1 text-xs ${styles.textColor} opacity-80`}>\n                        <Flame className=\"w-3 h-3\" />\n                        <span>{exercise.caloriesPerMinute} cal/min</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Calories Badge */}\n                <div className=\"text-right\">\n                  <div className={`text-2xl font-bold ${styles.textColor}`}>\n                    {exercise.caloriesPerMinute}\n                  </div>\n                  <div className={`text-xs ${styles.textColor} opacity-70 font-medium`}>\n                    cal/min\n                  </div>\n                </div>\n              </div>\n\n              {/* Intensity Indicator */}\n              <div className=\"flex justify-between items-center mt-3 pt-3 border-t border-white/30 dark:border-black/20\">\n                <div className=\"flex items-center gap-1\">\n                  {[1, 2, 3, 4, 5].map((level) => (\n                    <div\n                      key={level}\n                      className={`w-2 h-2 rounded-full transition-all duration-300 ${\n                        level <= Math.ceil(exercise.caloriesPerMinute / 3)\n                          ? styles.gradient.replace('bg-gradient-to-br', 'bg-gradient-to-r')\n                          : \"bg-gray-300 dark:bg-gray-600\"\n                      }`}\n                    />\n                  ))}\n                </div>\n                \n                <Button\n                  size=\"sm\"\n                  className={`text-xs ${styles.gradient} text-white hover:opacity-90 transition-all duration-300 rounded-xl shadow-md`}\n                >\n                  <Star className=\"w-3 h-3 mr-1\" />\n                  Quick Add\n                </Button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* View All Button */}\n      <div className=\"text-center\">\n        <Button\n          variant=\"outline\"\n          className=\"bg-gradient-to-br from-pink-50 to-rose-50 dark:from-pink-900/20 dark:to-rose-900/20 border-pink-200 dark:border-pink-700 text-pink-700 dark:text-pink-300 hover:scale-105 transition-all duration-300 rounded-2xl px-6\"\n        >\n          <Trophy className=\"w-4 h-4 mr-2\" />\n          View All Exercises\n        </Button>\n      </div>\n    </div>\n  );\n}","size_bytes":7910},"fit-track/public/src/components/fitness-goals.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Progress } from \"./ui/progress\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { mockStorage } from \"../data/mockStorage\";\nimport { Target, Flame, Clock, Trophy, Star, Award } from \"lucide-react\";\n\ninterface Stats {\n  todayWorkouts: number;\n  caloriesBurned: number;\n  activeTimeMinutes: number;\n}\n\nexport function FitnessGoals() {\n  const { data: stats, isLoading } = useQuery<Stats>({\n    queryKey: [\"stats\"],\n    queryFn: () => mockStorage.getStats(\"mock-user-id\"),\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        {[1, 2, 3].map((i) => (\n          <div key={i} className=\"animate-pulse p-6 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 rounded-2xl\">\n            <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded mb-3\"></div>\n            <div className=\"h-3 bg-gray-300 dark:bg-gray-600 rounded mb-2\"></div>\n            <div className=\"h-2 bg-gray-300 dark:bg-gray-600 rounded\"></div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  const goals = [\n    {\n      name: \"Daily Calories\",\n      current: stats?.caloriesBurned || 0,\n      target: 500,\n      icon: Flame,\n      gradient: \"bg-gradient-to-br from-red-400 via-orange-500 to-yellow-500\",\n      bgGradient: \"bg-gradient-to-br from-red-50 via-orange-50 to-yellow-50 dark:from-red-900/30 dark:via-orange-900/30 dark:to-yellow-900/30\",\n      iconBg: \"bg-gradient-to-br from-red-500 to-orange-600\",\n      textColor: \"text-red-700 dark:text-red-300\",\n      progressColor: \"bg-gradient-to-r from-red-500 to-orange-500\",\n      borderColor: \"border-red-200/60 dark:border-red-700/60\"\n    },\n    {\n      name: \"Daily Workouts\",\n      current: stats?.todayWorkouts || 0,\n      target: 2,\n      icon: Target,\n      gradient: \"bg-gradient-to-br from-blue-400 via-indigo-500 to-purple-500\",\n      bgGradient: \"bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-blue-900/30 dark:via-indigo-900/30 dark:to-purple-900/30\",\n      iconBg: \"bg-gradient-to-br from-blue-500 to-indigo-600\",\n      textColor: \"text-blue-700 dark:text-blue-300\",\n      progressColor: \"bg-gradient-to-r from-blue-500 to-indigo-500\",\n      borderColor: \"border-blue-200/60 dark:border-blue-700/60\"\n    },\n    {\n      name: \"Active Minutes\",\n      current: stats?.activeTimeMinutes || 0,\n      target: 60,\n      icon: Clock,\n      gradient: \"bg-gradient-to-br from-emerald-400 via-green-500 to-teal-500\",\n      bgGradient: \"bg-gradient-to-br from-emerald-50 via-green-50 to-teal-50 dark:from-emerald-900/30 dark:via-green-900/30 dark:to-teal-900/30\",\n      iconBg: \"bg-gradient-to-br from-emerald-500 to-green-600\",\n      textColor: \"text-emerald-700 dark:text-emerald-300\",\n      progressColor: \"bg-gradient-to-r from-emerald-500 to-green-500\",\n      borderColor: \"border-emerald-200/60 dark:border-emerald-700/60\"\n    },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Beautiful Header */}\n      <div className=\"flex items-center gap-3 mb-2\">\n        <div className=\"w-10 h-10 bg-gradient-to-br from-orange-500 to-red-500 rounded-2xl flex items-center justify-center shadow-lg\">\n          <Trophy className=\"w-5 h-5 text-white\" />\n        </div>\n        <div>\n          <h3 className=\"text-lg font-bold text-gray-900 dark:text-white\">\n            Today's Mission\n          </h3>\n          <p className=\"text-sm text-orange-600 dark:text-orange-400 font-medium\">Crush your goals! 🎯</p>\n        </div>\n      </div>\n\n      {/* Gorgeous Goal Cards */}\n      <div className=\"space-y-4\">\n        {goals.map((goal) => {\n          const percentage = Math.min((goal.current / goal.target) * 100, 100);\n          const isCompleted = percentage >= 100;\n          const IconComponent = goal.icon;\n          \n          return (\n            <div\n              key={goal.name}\n              className={`group relative ${goal.bgGradient} p-5 rounded-2xl transition-all duration-300 hover:scale-[1.02] shadow-lg border ${goal.borderColor} ${\n                isCompleted ? 'ring-2 ring-yellow-400 ring-opacity-50' : ''\n              }`}\n            >\n              {/* Completion Sparkle Effect */}\n              {isCompleted && (\n                <div className=\"absolute top-2 right-2\">\n                  <Star className=\"w-5 h-5 text-yellow-500 animate-pulse\" />\n                </div>\n              )}\n              \n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center gap-3\">\n                  <div className={`w-12 h-12 ${goal.iconBg} rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300`}>\n                    <IconComponent className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <h4 className={`text-lg font-bold ${goal.textColor}`}>\n                      {goal.name}\n                    </h4>\n                    <p className={`text-sm ${goal.textColor} opacity-80`}>\n                      {goal.current} of {goal.target} {goal.name === 'Active Minutes' ? 'mins' : goal.name === 'Daily Calories' ? 'cal' : 'sessions'}\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"text-right\">\n                  <div className={`text-2xl font-bold ${goal.textColor} ${isCompleted ? 'text-yellow-600 dark:text-yellow-400' : ''}`}>\n                    {Math.round(percentage)}%\n                  </div>\n                  <div className={`text-xs ${goal.textColor} opacity-70`}>\n                    {isCompleted ? 'Complete!' : 'Progress'}\n                  </div>\n                </div>\n              </div>\n\n              {/* Beautiful Progress Bar */}\n              <div className=\"space-y-2\">\n                <div className=\"relative h-4 bg-white/50 dark:bg-gray-800/50 rounded-xl overflow-hidden\">\n                  <div \n                    className={`absolute inset-0 ${goal.progressColor} transition-all duration-1000 ease-out shadow-lg`}\n                    style={{ width: `${percentage}%` }}\n                  >\n                    <div className=\"absolute inset-0 bg-gradient-to-r from-white/20 to-transparent\"></div>\n                  </div>\n                  \n                  {/* Progress Indicator */}\n                  {percentage > 10 && (\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                      <span className=\"text-xs font-bold text-white drop-shadow-md\">\n                        {Math.round(percentage)}%\n                      </span>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Goal Status */}\n                <div className=\"flex justify-between items-center text-xs\">\n                  <span className={`${goal.textColor} opacity-70`}>\n                    {goal.current}/{goal.target}\n                  </span>\n                  <span className={`font-medium ${isCompleted ? 'text-yellow-600 dark:text-yellow-400' : goal.textColor}`}>\n                    {isCompleted ? (\n                      <span className=\"flex items-center gap-1\">\n                        <Award className=\"w-3 h-3\" />\n                        Goal Achieved!\n                      </span>\n                    ) : (\n                      `${goal.target - goal.current} to go`\n                    )}\n                  </span>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Overall Progress Summary */}\n      <div className=\"bg-gradient-to-br from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 p-4 rounded-2xl border border-indigo-200/50 dark:border-indigo-700/50\">\n        <div className=\"text-center\">\n          <div className=\"flex items-center justify-center gap-2 mb-2\">\n            <Trophy className=\"w-5 h-5 text-indigo-600 dark:text-indigo-400\" />\n            <span className=\"text-lg font-bold text-indigo-600 dark:text-indigo-400\">\n              Daily Score\n            </span>\n          </div>\n          <div className=\"text-2xl font-bold text-indigo-700 dark:text-indigo-300\">\n            {goals.filter(goal => (goal.current / goal.target) * 100 >= 100).length}/3\n          </div>\n          <div className=\"text-sm text-indigo-600/80 dark:text-indigo-400/80 font-medium\">\n            Goals completed today\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8521},"fit-track/public/src/components/header.tsx":{"content":"import { useTheme } from \"./theme-provider\";\nimport { Sun, Moon, Zap, User } from \"lucide-react\";\nimport { Button } from \"./ui/button\";\n\nexport function Header() {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <header className=\"bg-white/80 dark:bg-gray-900/80 backdrop-blur-md shadow-lg border-b border-gray-200/50 dark:border-gray-700/50 sticky top-0 z-50 transition-all duration-300\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 gradient-primary rounded-xl flex items-center justify-center shadow-lg\">\n              <Zap className=\"w-6 h-6 text-white\" />\n            </div>\n            <h1 className=\"text-2xl font-poppins font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\n              FitTrack\n            </h1>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n              className=\"rounded-full border-2 hover:scale-105 transition-all duration-200 hover:shadow-lg\"\n            >\n              {theme === \"dark\" ? (\n                <Sun className=\"w-5 h-5 text-yellow-500\" />\n              ) : (\n                <Moon className=\"w-5 h-5 text-blue-600\" />\n              )}\n            </Button>\n\n            <div className=\"flex items-center space-x-3 bg-gray-100 dark:bg-gray-800 rounded-full px-4 py-2 transition-colors duration-200\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center\">\n                <User className=\"w-4 h-4 text-white\" />\n              </div>\n              <span className=\"font-medium text-gray-700 dark:text-gray-300\">Alex Johnson</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}","size_bytes":2049},"fit-track/public/src/components/recent-activities.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { Button } from \"./ui/button\";\nimport { useToast } from \"../hooks/use-toast\";\nimport { Clock, Flame, Calendar, Trash2, Activity, Star, Trophy, Zap } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { type Workout } from \"../shared/schema\";\nimport { mockStorage } from \"../data/mockStorage\";\n\nconst getExerciseIcon = (exerciseType: string) => {\n  const iconMap: Record<string, React.ReactNode> = {\n    'Running': '🏃',\n    'Cycling': '🚴',\n    'Swimming': '🏊',\n    'Weight Training': '🏋️',\n    'Yoga': '🧘',\n    'Hiking': '🥾',\n    'Pilates': '🤸',\n    'Boxing': '🥊',\n    'Walking': '🚶',\n    'HIIT': '⚡',\n    'Dancing': '💃',\n    'Basketball': '🏀',\n    'Cardio': '❤️',\n    'Strength': '💪'\n  };\n  return iconMap[exerciseType] || '⚡';\n};\n\nconst getIntensityStyles = (intensity: string) => {\n  switch (intensity.toLowerCase()) {\n    case 'low':\n      return {\n        gradient: 'bg-gradient-to-br from-blue-400 to-cyan-500',\n        bgGradient: 'bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/30 dark:to-cyan-900/30',\n        textColor: 'text-blue-700 dark:text-blue-300',\n        borderColor: 'border-blue-200/60 dark:border-blue-700/60',\n        icon: '🌙'\n      };\n    case 'moderate':\n      return {\n        gradient: 'bg-gradient-to-br from-green-400 to-emerald-500',\n        bgGradient: 'bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30',\n        textColor: 'text-green-700 dark:text-green-300',\n        borderColor: 'border-green-200/60 dark:border-green-700/60',\n        icon: '☀️'\n      };\n    case 'high':\n      return {\n        gradient: 'bg-gradient-to-br from-orange-400 to-red-500',\n        bgGradient: 'bg-gradient-to-br from-orange-50 to-red-50 dark:from-orange-900/30 dark:to-red-900/30',\n        textColor: 'text-orange-700 dark:text-orange-300',\n        borderColor: 'border-orange-200/60 dark:border-orange-700/60',\n        icon: '🔥'\n      };\n    case 'very high':\n      return {\n        gradient: 'bg-gradient-to-br from-red-500 to-pink-600',\n        bgGradient: 'bg-gradient-to-br from-red-50 to-pink-50 dark:from-red-900/30 dark:to-pink-900/30',\n        textColor: 'text-red-700 dark:text-red-300',\n        borderColor: 'border-red-200/60 dark:border-red-700/60',\n        icon: '⚡'\n      };\n    default:\n      return {\n        gradient: 'bg-gradient-to-br from-gray-400 to-slate-500',\n        bgGradient: 'bg-gradient-to-br from-gray-50 to-slate-50 dark:from-gray-900/30 dark:to-slate-900/30',\n        textColor: 'text-gray-700 dark:text-gray-300',\n        borderColor: 'border-gray-200/60 dark:border-gray-700/60',\n        icon: '◯'\n      };\n  }\n};\n\nexport function RecentActivities() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: workouts = [], isLoading } = useQuery<Workout[]>({\n    queryKey: [\"workouts\"],\n    queryFn: () => mockStorage.getWorkouts(\"mock-user-id\"),\n  });\n\n  const deleteWorkoutMutation = useMutation({\n    mutationFn: async (workoutId: string) => {\n      await mockStorage.deleteWorkout(workoutId);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"workouts\"] });\n      queryClient.invalidateQueries({ queryKey: [\"stats\"] });\n      toast({\n        title: \"Workout Deleted Successfully! ✨\",\n        description: \"The workout has been removed from your history.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error Deleting Workout\",\n        description: \"Something went wrong. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        {[1, 2, 3].map((i) => (\n          <div key={i} className=\"animate-pulse p-4 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 rounded-2xl\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-12 h-12 bg-gray-300 dark:bg-gray-600 rounded-2xl\"></div>\n                <div className=\"space-y-2\">\n                  <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-24\"></div>\n                  <div className=\"h-3 bg-gray-300 dark:bg-gray-600 rounded w-32\"></div>\n                </div>\n              </div>\n              <div className=\"w-8 h-8 bg-gray-300 dark:bg-gray-600 rounded-xl\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  if (workouts.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"w-16 h-16 bg-gradient-to-br from-purple-100 to-pink-100 dark:from-purple-900/30 dark:to-pink-900/30 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n          <Activity className=\"w-8 h-8 text-purple-500 dark:text-purple-400\" />\n        </div>\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n          No Workouts Yet\n        </h3>\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Start logging your workouts to see them here! 💪\n        </p>\n      </div>\n    );\n  }\n\n  const recentWorkouts = workouts\n    .sort((a, b) => new Date(b.workoutDate).getTime() - new Date(a.workoutDate).getTime())\n    .slice(0, 8);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Beautiful Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-10 h-10 bg-gradient-to-br from-indigo-500 to-purple-500 rounded-2xl flex items-center justify-center shadow-lg\">\n            <Clock className=\"w-5 h-5 text-white\" />\n          </div>\n          <div>\n            <h3 className=\"text-lg font-bold text-gray-900 dark:text-white\">\n              Recent Activities\n            </h3>\n            <p className=\"text-sm text-indigo-600 dark:text-indigo-400 font-medium\">Your fitness journey 🚀</p>\n          </div>\n        </div>\n        <div className=\"text-sm text-gray-600 dark:text-gray-400 font-medium\">\n          {recentWorkouts.length} recent workouts\n        </div>\n      </div>\n\n      {/* Stunning Activity Cards */}\n      <div className=\"space-y-3 max-h-[400px] overflow-y-auto recent-activities-scroll\">\n        {recentWorkouts.map((workout) => {\n          const intensityStyles = getIntensityStyles(workout.intensity);\n          const exerciseIcon = getExerciseIcon(workout.exerciseType);\n          \n          return (\n            <div\n              key={workout.id}\n              className={`group relative ${intensityStyles.bgGradient} p-4 rounded-2xl transition-all duration-300 hover:scale-[1.01] shadow-lg border ${intensityStyles.borderColor} hover:shadow-xl`}\n            >\n              {/* Workout Header */}\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center gap-3\">\n                  <div className={`w-12 h-12 ${intensityStyles.gradient} rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300`}>\n                    <span className=\"text-2xl\">{exerciseIcon}</span>\n                  </div>\n                  \n                  <div>\n                    <h4 className={`text-lg font-bold ${intensityStyles.textColor}`}>\n                      {workout.exerciseType}\n                    </h4>\n                    <div className=\"flex items-center gap-2\">\n                      <span className={`text-xs ${intensityStyles.textColor} opacity-80`}>\n                        {formatDistanceToNow(new Date(workout.workoutDate), { addSuffix: true })}\n                      </span>\n                      <span className={`text-xs ${intensityStyles.textColor} px-2 py-1 rounded-full bg-white/40 dark:bg-black/20 font-medium`}>\n                        {intensityStyles.icon} {workout.intensity}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Delete Button */}\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => deleteWorkoutMutation.mutate(workout.id)}\n                  className=\"w-8 h-8 p-0 hover:bg-red-100 dark:hover:bg-red-900/30 hover:text-red-600 dark:hover:text-red-400 transition-all duration-300 rounded-xl opacity-0 group-hover:opacity-100\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                </Button>\n              </div>\n\n              {/* Workout Stats */}\n              <div className=\"grid grid-cols-3 gap-3\">\n                <div className=\"text-center\">\n                  <div className={`flex items-center justify-center gap-1 text-xl font-bold ${intensityStyles.textColor} mb-1`}>\n                    <Clock className=\"w-4 h-4\" />\n                    <span>{workout.duration}</span>\n                  </div>\n                  <div className={`text-xs ${intensityStyles.textColor} opacity-70 font-medium`}>\n                    minutes\n                  </div>\n                </div>\n                \n                <div className=\"text-center\">\n                  <div className={`flex items-center justify-center gap-1 text-xl font-bold ${intensityStyles.textColor} mb-1`}>\n                    <Flame className=\"w-4 h-4\" />\n                    <span>{workout.caloriesBurned}</span>\n                  </div>\n                  <div className={`text-xs ${intensityStyles.textColor} opacity-70 font-medium`}>\n                    calories\n                  </div>\n                </div>\n                \n                <div className=\"text-center\">\n                  <div className={`flex items-center justify-center gap-1 text-xl font-bold ${intensityStyles.textColor} mb-1`}>\n                    <Star className=\"w-4 h-4\" />\n                    <span>{Math.round(workout.caloriesBurned / workout.duration)}</span>\n                  </div>\n                  <div className={`text-xs ${intensityStyles.textColor} opacity-70 font-medium`}>\n                    cal/min\n                  </div>\n                </div>\n              </div>\n\n              {/* Notes Section */}\n              {workout.notes && (\n                <div className=\"mt-3 pt-3 border-t border-white/30 dark:border-black/20\">\n                  <p className={`text-sm ${intensityStyles.textColor} opacity-90 italic`}>\n                    \"{workout.notes}\"\n                  </p>\n                </div>\n              )}\n\n              {/* Date Badge */}\n              <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                <div className={`px-2 py-1 rounded-lg text-xs font-medium ${intensityStyles.textColor} bg-white/40 dark:bg-black/20`}>\n                  <Calendar className=\"w-3 h-3 inline mr-1\" />\n                  {new Date(workout.workoutDate).toLocaleDateString()}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Summary Footer */}\n      {recentWorkouts.length > 3 && (\n        <div className=\"bg-gradient-to-br from-gray-50 to-slate-50 dark:from-gray-900/20 dark:to-slate-900/20 p-4 rounded-2xl border border-gray-200/50 dark:border-gray-700/50\">\n          <div className=\"flex items-center justify-center gap-4\">\n            <div className=\"flex items-center gap-1 text-gray-700 dark:text-gray-300\">\n              <Trophy className=\"w-4 h-4\" />\n              <span className=\"text-sm font-medium\">\n                {recentWorkouts.length} recent sessions\n              </span>\n            </div>\n            <div className=\"flex items-center gap-1 text-gray-700 dark:text-gray-300\">\n              <Flame className=\"w-4 h-4\" />\n              <span className=\"text-sm font-medium\">\n                {recentWorkouts.reduce((sum, w) => sum + w.caloriesBurned, 0)} total calories\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":12100},"fit-track/public/src/components/theme-provider.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"dark\" | \"light\";\n\ntype ThemeProviderContextType = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    if (typeof window !== \"undefined\") {\n      return (localStorage.getItem(\"theme\") as Theme) || \"light\";\n    }\n    return \"light\";\n  });\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n    \n    // Remove existing theme classes\n    root.classList.remove(\"light\", \"dark\");\n    \n    // Add current theme class\n    root.classList.add(theme);\n    \n    // Save to localStorage\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <ThemeProviderContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n\n  return context;\n}","size_bytes":1215},"fit-track/public/src/components/weekly-progress.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Calendar, TrendingUp, Award, Target, Flame, Star } from \"lucide-react\";\n\ninterface DayData {\n  day: string;\n  workouts: number;\n  calories: number;\n  duration: number;\n  achievement: 'exceeded' | 'met' | 'partial' | 'missed';\n  percentage: number;\n}\n\ninterface Workout {\n  id: string;\n  exerciseType: string;\n  duration: number;\n  intensity: string;\n  workoutDate: string;\n}\n\nexport function WeeklyProgress() {\n  const [workouts, setWorkouts] = useState<Workout[]>([]);\n\n  useEffect(() => {\n    const loadWorkouts = () => {\n      try {\n        const workoutData = localStorage.getItem('fittrack_workouts');\n        if (workoutData) {\n          const parsedWorkouts = JSON.parse(workoutData);\n          setWorkouts(parsedWorkouts || []);\n        } else {\n          setWorkouts([]);\n        }\n      } catch (error) {\n        console.error('Error loading workouts from localStorage:', error);\n        setWorkouts([]);\n      }\n    };\n\n    loadWorkouts();\n    const interval = setInterval(loadWorkouts, 2000);\n    const handleStorageChange = (e: StorageEvent) => {\n      if (e.key === 'fittrack_workouts') {\n        loadWorkouts();\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  const getLast7Days = (): DayData[] => {\n    const days = [];\n    const today = new Date();\n    \n    for (let i = 6; i >= 0; i--) {\n      const date = new Date(today);\n      date.setDate(today.getDate() - i);\n      \n      const dayWorkouts = workouts.filter(workout => {\n        const workoutDate = new Date(workout.workoutDate);\n        return workoutDate.toDateString() === date.toDateString();\n      });\n      \n      const workoutCount = dayWorkouts.length;\n      const totalDuration = dayWorkouts.reduce((sum, w) => sum + w.duration, 0);\n      const totalCalories = dayWorkouts.reduce((sum, w) => sum + getCaloriesPerMinute(w.exerciseType) * w.duration, 0);\n      \n      const dailyCalorieGoal = 300;\n      const dailyWorkoutGoal = 1;\n\n      let achievement: 'exceeded' | 'met' | 'partial' | 'missed';\n      let percentage: number;\n\n      if (totalCalories >= dailyCalorieGoal * 1.5 || workoutCount >= 2) {\n        achievement = 'exceeded';\n        percentage = Math.min(150, (totalCalories / dailyCalorieGoal) * 100);\n      } else if (totalCalories >= dailyCalorieGoal || workoutCount >= dailyWorkoutGoal) {\n        achievement = 'met';\n        percentage = 100;\n      } else if (totalCalories > 0 || workoutCount > 0) {\n        achievement = 'partial';\n        percentage = Math.max(25, (totalCalories / dailyCalorieGoal) * 100);\n      } else {\n        achievement = 'missed';\n        percentage = 0;\n      }\n\n      days.push({\n        day: date.toLocaleDateString('en-US', { weekday: 'short' }),\n        workouts: workoutCount,\n        calories: Math.round(totalCalories),\n        duration: totalDuration,\n        achievement,\n        percentage: Math.min(percentage, 100)\n      });\n    }\n    \n    return days;\n  };\n\n  const getCaloriesPerMinute = (exerciseType: string): number => {\n    const calorieMap: Record<string, number> = {\n      'Running': 12,\n      'Cycling': 8,\n      'Swimming': 10,\n      'Weight Training': 6,\n      'Yoga': 3,\n      'Walking': 4,\n      'HIIT': 15,\n      'Dancing': 7,\n      'Hiking': 9,\n      'Basketball': 11,\n      'Boxing': 11,\n      'Cardio': 10,\n      'Strength': 6,\n      'Gym': 8\n    };\n    return calorieMap[exerciseType] || 8;\n  };\n\n  const weekData = getLast7Days();\n\n  const getAchievementStyles = (achievement: string) => {\n    switch (achievement) {\n      case 'exceeded':\n        return {\n          gradient: 'bg-gradient-to-br from-amber-400 via-yellow-500 to-orange-500',\n          glow: 'shadow-xl shadow-yellow-400/50',\n          icon: Flame,\n          iconColor: 'text-yellow-100',\n          bgColor: 'bg-gradient-to-br from-yellow-50 to-amber-50 dark:from-yellow-900/30 dark:to-amber-900/30',\n          textColor: 'text-yellow-800 dark:text-yellow-200',\n          borderColor: 'border-yellow-300 dark:border-yellow-700'\n        };\n      case 'met':\n        return {\n          gradient: 'bg-gradient-to-br from-emerald-400 via-green-500 to-teal-500',\n          glow: 'shadow-lg shadow-green-400/40',\n          icon: Star,\n          iconColor: 'text-green-100',\n          bgColor: 'bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30',\n          textColor: 'text-green-800 dark:text-green-200',\n          borderColor: 'border-green-300 dark:border-green-700'\n        };\n      case 'partial':\n        return {\n          gradient: 'bg-gradient-to-br from-blue-400 via-indigo-500 to-purple-500',\n          glow: 'shadow-lg shadow-blue-400/40',\n          icon: TrendingUp,\n          iconColor: 'text-blue-100',\n          bgColor: 'bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/30 dark:to-indigo-900/30',\n          textColor: 'text-blue-800 dark:text-blue-200',\n          borderColor: 'border-blue-300 dark:border-blue-700'\n        };\n      default:\n        return {\n          gradient: 'bg-gradient-to-br from-gray-300 via-gray-400 to-gray-500',\n          glow: '',\n          icon: Calendar,\n          iconColor: 'text-gray-100',\n          bgColor: 'bg-gradient-to-br from-gray-50 to-slate-50 dark:from-gray-800/50 dark:to-slate-800/50',\n          textColor: 'text-gray-600 dark:text-gray-400',\n          borderColor: 'border-gray-300 dark:border-gray-700'\n        };\n    }\n  };\n\n  const weeklyStats = {\n    totalWorkouts: weekData.reduce((sum, day) => sum + day.workouts, 0),\n    totalCalories: weekData.reduce((sum, day) => sum + day.calories, 0),\n    totalDuration: weekData.reduce((sum, day) => sum + day.duration, 0),\n    achievedDays: weekData.filter(day => day.achievement === 'met' || day.achievement === 'exceeded').length\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Beautiful Week Overview */}\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 via-pink-500 to-rose-500 rounded-2xl flex items-center justify-center shadow-lg\">\n            <TrendingUp className=\"w-6 h-6 text-white\" />\n          </div>\n          <div>\n            <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n              Weekly Journey\n            </h3>\n            <p className=\"text-sm text-purple-600 dark:text-purple-400 font-medium\">Your progress story ✨</p>\n          </div>\n        </div>\n        <div className=\"flex items-center gap-2 text-sm bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/30 dark:to-pink-900/30 px-4 py-2 rounded-2xl text-purple-700 dark:text-purple-300 border border-purple-200 dark:border-purple-700\">\n          <Calendar className=\"w-4 h-4\" />\n          Last 7 days\n        </div>\n      </div>\n\n      {/* Gorgeous Stats Overview */}\n      <div className=\"grid grid-cols-3 gap-4 mb-6\">\n        <div className=\"group bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-blue-900/30 dark:via-indigo-900/30 dark:to-purple-900/30 p-5 rounded-2xl text-center hover:scale-105 transition-all duration-300 shadow-lg border border-blue-200/50 dark:border-blue-700/50\">\n          <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl mx-auto mb-3 flex items-center justify-center shadow-lg\">\n            <Target className=\"w-5 h-5 text-white\" />\n          </div>\n          <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n            {weeklyStats.totalWorkouts}\n          </div>\n          <div className=\"text-sm text-blue-600/80 dark:text-blue-400/80 font-medium\">\n            Workouts\n          </div>\n        </div>\n        \n        <div className=\"group bg-gradient-to-br from-green-50 via-emerald-50 to-teal-50 dark:from-green-900/30 dark:via-emerald-900/30 dark:to-teal-900/30 p-5 rounded-2xl text-center hover:scale-105 transition-all duration-300 shadow-lg border border-green-200/50 dark:border-green-700/50\">\n          <div className=\"w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl mx-auto mb-3 flex items-center justify-center shadow-lg\">\n            <Flame className=\"w-5 h-5 text-white\" />\n          </div>\n          <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n            {Math.round(weeklyStats.totalCalories)}\n          </div>\n          <div className=\"text-sm text-green-600/80 dark:text-green-400/80 font-medium\">\n            Calories\n          </div>\n        </div>\n        \n        <div className=\"group bg-gradient-to-br from-purple-50 via-pink-50 to-rose-50 dark:from-purple-900/30 dark:via-pink-900/30 dark:to-rose-900/30 p-5 rounded-2xl text-center hover:scale-105 transition-all duration-300 shadow-lg border border-purple-200/50 dark:border-purple-700/50\">\n          <div className=\"w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-600 rounded-2xl mx-auto mb-3 flex items-center justify-center shadow-lg\">\n            <Calendar className=\"w-5 h-5 text-white\" />\n          </div>\n          <div className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\n            {Math.round(weeklyStats.totalDuration)}m\n          </div>\n          <div className=\"text-sm text-purple-600/80 dark:text-purple-400/80 font-medium\">\n            Minutes\n          </div>\n        </div>\n      </div>\n\n      {/* Stunning Daily Progress Chart */}\n      <div className=\"space-y-4\">\n        <h4 className=\"text-lg font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n          <Award className=\"w-5 h-5 text-yellow-500\" />\n          Daily Progress\n        </h4>\n        \n        <div className=\"grid grid-cols-7 gap-2\">\n          {weekData.map((day, index) => {\n            const styles = getAchievementStyles(day.achievement);\n            const IconComponent = styles.icon;\n            \n            return (\n              <div key={index} className=\"text-center group\">\n                <div className={`relative ${styles.bgColor} p-3 rounded-2xl transition-all duration-300 hover:scale-105 ${styles.glow} border ${styles.borderColor}`}>\n                  {/* Beautiful Progress Bar */}\n                  <div className=\"relative h-20 w-full bg-gray-200 dark:bg-gray-700 rounded-xl overflow-hidden mb-3\">\n                    <div \n                      className={`absolute bottom-0 w-full ${styles.gradient} transition-all duration-700 ease-out ${styles.glow}`}\n                      style={{ height: `${day.percentage}%` }}\n                    />\n                    {day.achievement !== 'missed' && (\n                      <div className=\"absolute inset-0 flex items-center justify-center\">\n                        <IconComponent className={`w-4 h-4 ${styles.iconColor}`} />\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Day Stats */}\n                  <div className=\"space-y-1\">\n                    <div className={`text-xs font-bold ${styles.textColor}`}>\n                      {day.day}\n                    </div>\n                    <div className={`text-xs ${styles.textColor}`}>\n                      {day.workouts}w • {day.calories}cal\n                    </div>\n                    {day.duration > 0 && (\n                      <div className={`text-xs ${styles.textColor}`}>\n                        {day.duration}min\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Achievement Summary */}\n      <div className=\"bg-gradient-to-br from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 p-4 rounded-2xl border border-indigo-200/50 dark:border-indigo-700/50\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-indigo-600 dark:text-indigo-400\">\n            {weeklyStats.achievedDays}/7\n          </div>\n          <div className=\"text-sm text-indigo-600/80 dark:text-indigo-400/80 font-medium\">\n            Days with goals achieved\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":12296},"fit-track/public/src/data/mockStorage.ts":{"content":"import { Workout, Exercise, Goal, InsertWorkout, InsertExercise, InsertGoal } from \"../shared/schema\";\n\n// Mock storage class for frontend-only version\nexport class MockStorage {\n  private workouts: Workout[] = [];\n  private exercises: Exercise[] = [];\n  private goals: Goal[] = [];\n\n  constructor() {\n    // Load data from localStorage\n    this.loadFromLocalStorage();\n    \n    // Seed with popular exercises if none exist\n    if (this.exercises.length === 0) {\n      this.seedExercises();\n    }\n  }\n\n  private loadFromLocalStorage() {\n    try {\n      const workoutsData = localStorage.getItem('fittrack_workouts');\n      const exercisesData = localStorage.getItem('fittrack_exercises');\n      const goalsData = localStorage.getItem('fittrack_goals');\n\n      if (workoutsData) {\n        this.workouts = JSON.parse(workoutsData).map((w: any) => ({\n          ...w,\n          workoutDate: new Date(w.workoutDate),\n          createdAt: new Date(w.createdAt),\n        }));\n      }\n\n      if (exercisesData) {\n        this.exercises = JSON.parse(exercisesData);\n      }\n\n      if (goalsData) {\n        this.goals = JSON.parse(goalsData);\n      }\n    } catch (error) {\n      console.error('Error loading from localStorage:', error);\n    }\n  }\n\n  private saveToLocalStorage() {\n    try {\n      localStorage.setItem('fittrack_workouts', JSON.stringify(this.workouts));\n      localStorage.setItem('fittrack_exercises', JSON.stringify(this.exercises));\n      localStorage.setItem('fittrack_goals', JSON.stringify(this.goals));\n    } catch (error) {\n      console.error('Error saving to localStorage:', error);\n    }\n  }\n\n  private seedExercises() {\n    const popularExercises = [\n      { name: \"Running\", caloriesPerMinute: 8, category: \"Cardio\" },\n      { name: \"Cycling\", caloriesPerMinute: 6, category: \"Cardio\" },\n      { name: \"Swimming\", caloriesPerMinute: 10, category: \"Cardio\" },\n      { name: \"Weight Training\", caloriesPerMinute: 5, category: \"Strength\" },\n      { name: \"Yoga\", caloriesPerMinute: 3, category: \"Flexibility\" },\n      { name: \"Walking\", caloriesPerMinute: 4, category: \"Cardio\" },\n      { name: \"Push-ups\", caloriesPerMinute: 8, category: \"Strength\" },\n      { name: \"Squats\", caloriesPerMinute: 6, category: \"Strength\" },\n      { name: \"Jumping Jacks\", caloriesPerMinute: 7, category: \"Cardio\" },\n      { name: \"Planks\", caloriesPerMinute: 4, category: \"Core\" },\n    ];\n\n    popularExercises.forEach((exercise) => {\n      this.exercises.push({\n        id: this.generateId(),\n        ...exercise,\n      });\n    });\n\n    this.saveToLocalStorage();\n  }\n\n  private generateId(): string {\n    return Math.random().toString(36).substr(2, 9);\n  }\n\n  // Workout methods\n  async getWorkouts(userId: string): Promise<Workout[]> {\n    return this.workouts.filter(w => w.userId === userId);\n  }\n\n  async createWorkout(userId: string, workout: InsertWorkout): Promise<Workout> {\n    const newWorkout: Workout = {\n      id: this.generateId(),\n      userId,\n      ...workout,\n      workoutDate: typeof workout.workoutDate === 'string' \n        ? new Date(workout.workoutDate) \n        : workout.workoutDate,\n      createdAt: new Date(),\n    };\n\n    this.workouts.push(newWorkout);\n    this.saveToLocalStorage();\n    return newWorkout;\n  }\n\n  async deleteWorkout(id: string): Promise<boolean> {\n    const initialLength = this.workouts.length;\n    this.workouts = this.workouts.filter(w => w.id !== id);\n    const deleted = this.workouts.length < initialLength;\n    if (deleted) {\n      this.saveToLocalStorage();\n    }\n    return deleted;\n  }\n\n  // Exercise methods\n  async getExercises(): Promise<Exercise[]> {\n    return this.exercises;\n  }\n\n  async createExercise(exercise: InsertExercise): Promise<Exercise> {\n    const newExercise: Exercise = {\n      id: this.generateId(),\n      ...exercise,\n    };\n\n    this.exercises.push(newExercise);\n    this.saveToLocalStorage();\n    return newExercise;\n  }\n\n  // Goal methods\n  async getGoals(userId: string): Promise<Goal[]> {\n    return this.goals.filter(g => g.userId === userId);\n  }\n\n  async createGoal(userId: string, goal: InsertGoal): Promise<Goal> {\n    const newGoal: Goal = {\n      id: this.generateId(),\n      userId,\n      current: 0,\n      ...goal,\n    };\n\n    this.goals.push(newGoal);\n    this.saveToLocalStorage();\n    return newGoal;\n  }\n\n  async updateGoal(id: string, current: number): Promise<Goal | undefined> {\n    const goal = this.goals.find(g => g.id === id);\n    if (goal) {\n      goal.current = current;\n      this.saveToLocalStorage();\n      return goal;\n    }\n    return undefined;\n  }\n\n  // Stats methods\n  async getStats(userId: string): Promise<any> {\n    const userWorkouts = await this.getWorkouts(userId);\n    const today = new Date();\n    const todayStart = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    \n    const todayWorkouts = userWorkouts.filter(w => \n      w.workoutDate >= todayStart\n    ).length;\n\n    const totalCalories = userWorkouts.reduce((sum, w) => sum + w.caloriesBurned, 0);\n    const totalActiveTime = userWorkouts.reduce((sum, w) => sum + w.duration, 0);\n\n    return {\n      todayWorkouts,\n      caloriesBurned: totalCalories,\n      activeTimeMinutes: totalActiveTime,\n      weeklyWorkouts: userWorkouts.filter(w => {\n        const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n        return w.workoutDate >= weekAgo;\n      }).length,\n    };\n  }\n}\n\nexport const mockStorage = new MockStorage();","size_bytes":5440},"fit-track/public/src/hooks/use-mobile.tsx":{"content":"import { useState, useEffect } from \"react\";\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = useState<boolean>(false);\n\n  useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    };\n    mql.addEventListener(\"change\", onChange);\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    return () => mql.removeEventListener(\"change\", onChange);\n  }, []);\n\n  return isMobile;\n}","size_bytes":558},"fit-track/public/src/hooks/use-theme.tsx":{"content":"import React, { createContext, useContext, useEffect, useState } from 'react';\n\ntype Theme = 'dark' | 'light' | 'system';\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: 'system',\n  setTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = 'system',\n  storageKey = 'vite-ui-theme',\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  );\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n\n    root.classList.remove('light', 'dark');\n\n    if (theme === 'system') {\n      const systemTheme = window.matchMedia('(prefers-color-scheme: dark)')\n        .matches\n        ? 'dark'\n        : 'light';\n\n      root.classList.add(systemTheme);\n      return;\n    }\n\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme);\n      setTheme(theme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error('useTheme must be used within a ThemeProvider');\n\n  return context;\n};","size_bytes":1611},"fit-track/public/src/hooks/use-toast.ts":{"content":"import { useState, useCallback } from \"react\";\n\nexport interface Toast {\n  id: string;\n  title?: string;\n  description?: string;\n  action?: React.ReactNode;\n  variant?: \"default\" | \"destructive\";\n}\n\nexport function useToast() {\n  const [toasts, setToasts] = useState<Toast[]>([]);\n\n  const toast = useCallback(\n    ({ title, description, action, variant = \"default\" }: Omit<Toast, \"id\">) => {\n      const id = Math.random().toString(36).substr(2, 9);\n      const newToast = { id, title, description, action, variant };\n      \n      setToasts((prevToasts) => [...prevToasts, newToast]);\n\n      // Auto-remove toast after 5 seconds\n      setTimeout(() => {\n        setToasts((prevToasts) => prevToasts.filter((t) => t.id !== id));\n      }, 5000);\n\n      return id;\n    },\n    []\n  );\n\n  const dismiss = useCallback((toastId: string) => {\n    setToasts((prevToasts) => prevToasts.filter((t) => t.id !== toastId));\n  }, []);\n\n  return {\n    toast,\n    dismiss,\n    toasts,\n  };\n}","size_bytes":975},"fit-track/public/src/lib/queryClient.ts":{"content":"import { QueryClient } from \"@tanstack/react-query\";\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: async ({ queryKey }) => {\n        const url = queryKey[0] as string;\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      },\n      retry: 1,\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\n// Helper function for API requests\nexport const apiRequest = async (url: string, options?: RequestInit) => {\n  const response = await fetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    ...options,\n  });\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return response.json();\n};","size_bytes":830},"fit-track/public/src/lib/utils.ts":{"content":"import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}","size_bytes":168},"fit-track/public/src/pages/dashboard.tsx":{"content":"import { AddWorkoutForm } from \"../components/add-workout-form\";\nimport { RecentActivities } from \"../components/recent-activities\";\nimport { WeeklyProgress } from \"../components/weekly-progress\";\nimport { FitnessGoals } from \"../components/fitness-goals\";\nimport { ExerciseLibrary } from \"../components/exercise-library\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { \n  Activity, Target, Clock, Calendar, Plus, Award, \n  Flame, Zap, Trophy, ArrowUp, ArrowDown, Minus, Filter,\n  Download, Settings, Bell, BarChart3, Heart\n} from \"lucide-react\";\nimport { Button } from \"../components/ui/button\";\n\ninterface Stats {\n  todayWorkouts: number;\n  caloriesBurned: number;\n  activeTimeMinutes: number;\n  weeklyGoalProgress: number;\n  streak: number;\n  totalWorkouts: number;\n  avgCaloriesPerWorkout: number;\n  personalRecords: number;\n  lastWeekComparison: {\n    workouts: number;\n    calories: number;\n    time: number;\n  };\n}\n\ninterface Workout {\n  id: string;\n  exerciseType: string;\n  duration: number;\n  calories: number;\n  intensity: string;\n  workoutDate: Date;\n  isPersonalRecord?: boolean;\n}\n\nexport default function Dashboard() {\n  const { data: stats } = useQuery<Stats>({\n    queryKey: ['/api/stats'],\n  });\n\n  const { data: workouts } = useQuery<Workout[]>({\n    queryKey: ['/api/workouts'],\n  });\n\n  const getChangeIndicator = (current: number, previous: number) => {\n    if (current > previous) return { icon: ArrowUp, color: \"text-green-500\", bg: \"bg-green-50 dark:bg-green-900/20\" };\n    if (current < previous) return { icon: ArrowDown, color: \"text-red-500\", bg: \"bg-red-50 dark:bg-red-900/20\" };\n    return { icon: Minus, color: \"text-gray-500\", bg: \"bg-gray-50 dark:bg-gray-900/20\" };\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-indigo-900 relative overflow-hidden\">\n      {/* Beautiful floating gradient orbs */}\n      <div className=\"absolute top-20 left-10 w-80 h-80 bg-gradient-to-br from-blue-400/20 to-purple-600/20 rounded-full blur-3xl animate-pulse\" />\n      <div className=\"absolute top-40 right-20 w-96 h-96 bg-gradient-to-br from-pink-400/15 to-orange-500/15 rounded-full blur-3xl animate-pulse delay-1000\" />\n      <div className=\"absolute bottom-20 left-1/3 w-72 h-72 bg-gradient-to-br from-emerald-400/18 to-cyan-500/18 rounded-full blur-3xl animate-pulse delay-2000\" />\n      \n      {/* Main content */}\n      <div className=\"relative z-10\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          \n          {/* Beautiful Enhanced Header */}\n          <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-12 gap-6\">\n            <div className=\"relative\">\n              <div className=\"flex items-center gap-4 mb-3\">\n                <div className=\"p-3 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl shadow-lg\">\n                  <Trophy className=\"w-8 h-8 text-white\" />\n                </div>\n                <div>\n                  <h1 className=\"text-5xl font-extrabold bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent\">\n                    FitTrack Pro\n                  </h1>\n                  {stats?.streak && stats.streak > 0 && (\n                    <div className=\"bg-gradient-to-r from-orange-400 to-red-500 text-white px-4 py-2 rounded-full text-sm font-bold flex items-center gap-2 shadow-lg mt-2\">\n                      <Flame className=\"w-4 h-4\" />\n                      {stats.streak} day fire streak!\n                    </div>\n                  )}\n                </div>\n              </div>\n              <p className=\"text-xl text-gray-700 dark:text-gray-300 font-medium\">\n                Transform your fitness journey with beautiful insights ✨\n              </p>\n            </div>\n            \n            <div className=\"flex items-center gap-3\">\n              <Button variant=\"outline\" size=\"sm\">\n                <Filter className=\"w-4 h-4 mr-2\" />\n                Filters\n              </Button>\n              <Button variant=\"outline\" size=\"sm\">\n                <Download className=\"w-4 h-4 mr-2\" />\n                Export\n              </Button>\n              <Button variant=\"outline\" size=\"sm\">\n                <Bell className=\"w-4 h-4 mr-2\" />\n                Alerts\n              </Button>\n              <Button className=\"gradient-primary hover:opacity-90 text-white px-6 shadow-lg\">\n                <Plus className=\"w-4 h-4 mr-2\" />\n                Quick Add Workout\n              </Button>\n            </div>\n          </div>\n\n          {/* Advanced Stats Grid with Gradients */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {/* Today's Workouts */}\n            <div className=\"bg-gradient-card backdrop-blur-md rounded-2xl p-6 shadow-xl border border-white/20 dark:border-gray-800/50 hover:shadow-2xl transition-all duration-300 hover:scale-105\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"p-3 gradient-primary rounded-xl shadow-lg\">\n                  <Activity className=\"w-6 h-6 text-white\" />\n                </div>\n                {stats?.lastWeekComparison && (\n                  <div className={`flex items-center gap-1 px-2 py-1 rounded-lg ${getChangeIndicator(stats.todayWorkouts, stats.lastWeekComparison.workouts).bg}`}>\n                    {(() => {\n                      const indicator = getChangeIndicator(stats.todayWorkouts, stats.lastWeekComparison.workouts);\n                      const Icon = indicator.icon;\n                      return <Icon className={`w-3 h-3 ${indicator.color}`} />;\n                    })()}\n                    <span className={`text-xs font-medium ${getChangeIndicator(stats.todayWorkouts, stats.lastWeekComparison.workouts).color}`}>\n                      {Math.abs(((stats.todayWorkouts - stats.lastWeekComparison.workouts) / (stats.lastWeekComparison.workouts || 1)) * 100).toFixed(0)}%\n                    </span>\n                  </div>\n                )}\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-1\">Today's Workouts</p>\n                <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                  {stats?.todayWorkouts ?? 0}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                  Goal: 2 workouts\n                </p>\n              </div>\n            </div>\n\n            {/* Calories with Intensity Indicator */}\n            <div className=\"bg-gradient-card backdrop-blur-md rounded-2xl p-6 shadow-xl border border-white/20 dark:border-gray-800/50 hover:shadow-2xl transition-all duration-300 hover:scale-105\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"p-3 gradient-secondary rounded-xl shadow-lg\">\n                  <Flame className=\"w-6 h-6 text-white\" />\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <Zap className=\"w-3 h-3 text-yellow-500\" />\n                  <span className=\"text-xs font-medium text-yellow-600 dark:text-yellow-400\">High Intensity</span>\n                </div>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-1\">Calories Burned</p>\n                <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                  {stats?.caloriesBurned ?? 0}\n                </p>\n                <div className=\"flex items-center gap-2 mt-2\">\n                  <div className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n                    <div \n                      className=\"h-full gradient-warning transition-all duration-500\"\n                      style={{ width: `${Math.min(((stats?.caloriesBurned ?? 0) / 800) * 100, 100)}%` }}\n                    />\n                  </div>\n                  <span className=\"text-xs text-gray-500\">800 goal</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Active Time with Efficiency */}\n            <div className=\"bg-gradient-card backdrop-blur-md rounded-2xl p-6 shadow-xl border border-white/20 dark:border-gray-800/50 hover:shadow-2xl transition-all duration-300 hover:scale-105\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"p-3 gradient-success rounded-xl shadow-lg\">\n                  <Clock className=\"w-6 h-6 text-white\" />\n                </div>\n                <div className=\"bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300 px-2 py-1 rounded-lg text-xs font-medium\">\n                  Efficient\n                </div>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-1\">Active Time</p>\n                <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                  {stats?.activeTimeMinutes ?? 0}m\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                  {stats?.avgCaloriesPerWorkout ? `${stats.avgCaloriesPerWorkout} cal/min avg` : 'No data'}\n                </p>\n              </div>\n            </div>\n\n            {/* Weekly Progress with Achievement */}\n            <div className=\"bg-gradient-card backdrop-blur-md rounded-2xl p-6 shadow-xl border border-white/20 dark:border-gray-800/50 hover:shadow-2xl transition-all duration-300 hover:scale-105\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"p-3 bg-gradient-to-br from-purple-500 to-indigo-500 rounded-xl shadow-lg\">\n                  <Trophy className=\"w-6 h-6 text-white\" />\n                </div>\n                {stats?.personalRecords && stats.personalRecords > 0 && (\n                  <div className=\"bg-yellow-100 text-yellow-700 dark:bg-yellow-900 dark:text-yellow-300 px-2 py-1 rounded-lg text-xs font-medium flex items-center gap-1\">\n                    <Award className=\"w-3 h-3\" />\n                    {stats.personalRecords} PRs\n                  </div>\n                )}\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-1\">Weekly Goal</p>\n                <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                  {workouts?.length ?? 0}/7\n                </p>\n                <div className=\"flex items-center gap-2 mt-2\">\n                  <div className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n                    <div \n                      className=\"h-full bg-gradient-to-r from-purple-400 to-indigo-500 transition-all duration-500\"\n                      style={{ width: `${Math.min(((workouts?.length ?? 0) / 7) * 100, 100)}%` }}\n                    />\n                  </div>\n                  <span className=\"text-xs text-gray-500\">{Math.round(((workouts?.length ?? 0) / 7) * 100)}%</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Beautiful Card Grid */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-10\">\n            \n            {/* Stunning Add Workout Form */}\n            <div className=\"group relative bg-gradient-to-br from-white to-blue-50/50 dark:from-gray-800 dark:to-blue-900/20 rounded-3xl shadow-xl border border-blue-200/40 dark:border-blue-700/30 hover:shadow-2xl hover:scale-[1.02] transition-all duration-500\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/5 to-purple-500/5 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n              <div className=\"relative px-6 py-4 border-b border-blue-200/30 dark:border-blue-700/30\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\n                      <Plus className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Create Workout</h2>\n                      <p className=\"text-sm text-blue-600 dark:text-blue-400 font-medium\">Log your training session</p>\n                    </div>\n                  </div>\n                  <Button variant=\"outline\" size=\"sm\" className=\"text-xs bg-blue-50 border-blue-200 text-blue-700 hover:bg-blue-100\">\n                    Quick Setup\n                  </Button>\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <AddWorkoutForm />\n              </div>\n            </div>\n\n            {/* Beautiful Recent Activities */}\n            <div className=\"group relative bg-gradient-to-br from-white to-emerald-50/50 dark:from-gray-800 dark:to-emerald-900/20 rounded-3xl shadow-xl border border-emerald-200/40 dark:border-emerald-700/30 hover:shadow-2xl hover:scale-[1.02] transition-all duration-500\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-emerald-500/5 to-teal-500/5 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n              <div className=\"relative px-6 py-4 border-b border-emerald-200/30 dark:border-emerald-700/30\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\n                      <Activity className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Recent Activities</h2>\n                      <p className=\"text-sm text-emerald-600 dark:text-emerald-400 font-medium\">Your fitness journey</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <RecentActivities />\n              </div>\n            </div>\n\n            {/* Stunning Weekly Progress */}\n            <div className=\"group relative bg-gradient-to-br from-white to-purple-50/50 dark:from-gray-800 dark:to-purple-900/20 rounded-3xl shadow-xl border border-purple-200/40 dark:border-purple-700/30 hover:shadow-2xl hover:scale-[1.02] transition-all duration-500\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-purple-500/5 to-pink-500/5 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n              <div className=\"relative px-6 py-4 border-b border-purple-200/30 dark:border-purple-700/30\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\n                      <BarChart3 className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Weekly Progress</h2>\n                      <p className=\"text-sm text-purple-600 dark:text-purple-400 font-medium\">Track your gains</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <WeeklyProgress />\n              </div>\n            </div>\n\n            {/* Gorgeous Fitness Goals */}\n            <div className=\"group relative bg-gradient-to-br from-white to-orange-50/50 dark:from-gray-800 dark:to-orange-900/20 rounded-3xl shadow-xl border border-orange-200/40 dark:border-orange-700/30 hover:shadow-2xl hover:scale-[1.02] transition-all duration-500\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-orange-500/5 to-red-500/5 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n              <div className=\"relative px-6 py-4 border-b border-orange-200/30 dark:border-orange-700/30\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-orange-500 to-red-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\n                      <Target className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Fitness Goals</h2>\n                      <p className=\"text-sm text-orange-600 dark:text-orange-400 font-medium\">Achieve greatness</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <FitnessGoals />\n              </div>\n            </div>\n          </div>\n\n          {/* Magnificent Exercise Library */}\n          <div className=\"group relative bg-gradient-to-br from-white to-pink-50/50 dark:from-gray-800 dark:to-pink-900/20 rounded-3xl shadow-xl border border-pink-200/40 dark:border-pink-700/30 hover:shadow-2xl hover:scale-[1.01] transition-all duration-500\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-pink-500/5 to-rose-500/5 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n            <div className=\"relative px-6 py-4 border-b border-pink-200/30 dark:border-pink-700/30\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-pink-500 to-rose-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\n                    <Heart className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Exercise Library</h2>\n                    <p className=\"text-sm text-pink-600 dark:text-pink-400 font-medium\">Discover new workouts</p>\n                  </div>\n                </div>\n                <Button variant=\"outline\" size=\"sm\" className=\"text-xs bg-pink-50 border-pink-200 text-pink-700 hover:bg-pink-100\">\n                  View All\n                </Button>\n              </div>\n            </div>\n            <div className=\"p-6\">\n              <ExerciseLibrary />\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":19147},"fit-track/public/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"../components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":711},"fit-track/public/src/shared/schema.ts":{"content":"import { z } from \"zod\";\n\n// Since this is a frontend-only version, we'll create mock types without drizzle\nexport interface User {\n  id: string;\n  username: string;\n  password: string;\n}\n\nexport interface Workout {\n  id: string;\n  userId: string;\n  exerciseType: string;\n  duration: number; // in minutes\n  caloriesBurned: number;\n  intensity: string; // Low, Moderate, High, Very High\n  notes?: string;\n  workoutDate: Date; // When the workout actually occurred\n  createdAt: Date;\n}\n\nexport interface Exercise {\n  id: string;\n  name: string;\n  caloriesPerMinute: number;\n  category: string;\n}\n\nexport interface Goal {\n  id: string;\n  userId: string;\n  type: string; // daily_calories, weekly_workouts, active_hours\n  target: number;\n  current: number;\n}\n\n// Zod schemas for validation\nexport const insertUserSchema = z.object({\n  username: z.string().min(1, \"Username is required\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n});\n\nexport const insertWorkoutSchema = z.object({\n  exerciseType: z.string().min(1, \"Exercise type is required\"),\n  duration: z.number().min(1, \"Duration must be at least 1 minute\"),\n  caloriesBurned: z.number().min(0, \"Calories burned must be non-negative\"),\n  intensity: z.enum([\"Low\", \"Moderate\", \"High\", \"Very High\"]),\n  notes: z.string().optional(),\n  workoutDate: z.union([z.string(), z.date()]).transform((val) => {\n    if (typeof val === 'string') {\n      return new Date(val);\n    }\n    return val;\n  }),\n});\n\nexport const insertExerciseSchema = z.object({\n  name: z.string().min(1, \"Exercise name is required\"),\n  caloriesPerMinute: z.number().min(0, \"Calories per minute must be non-negative\"),\n  category: z.string().min(1, \"Category is required\"),\n});\n\nexport const insertGoalSchema = z.object({\n  type: z.string().min(1, \"Goal type is required\"),\n  target: z.number().min(1, \"Target must be at least 1\"),\n});\n\n// Type inference\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type InsertWorkout = z.infer<typeof insertWorkoutSchema>;\nexport type InsertExercise = z.infer<typeof insertExerciseSchema>;\nexport type InsertGoal = z.infer<typeof insertGoalSchema>;","size_bytes":2150},"fit-track/public/src/components/ui/badge.tsx":{"content":"import * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants };","size_bytes":1169},"fit-track/public/src/components/ui/button.tsx":{"content":"import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"../../lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-xl text-sm font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 active:scale-95\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg hover:shadow-xl hover:from-blue-700 hover:to-purple-700\",\n        destructive:\n          \"bg-gradient-to-r from-red-500 to-pink-500 text-white shadow-lg hover:shadow-xl hover:from-red-600 hover:to-pink-600\",\n        outline:\n          \"border-2 border-gray-300 bg-white/80 backdrop-blur-sm hover:bg-gray-100 hover:border-gray-400 dark:border-gray-600 dark:bg-gray-800/80 dark:hover:bg-gray-700\",\n        secondary:\n          \"bg-gradient-to-r from-gray-200 to-gray-300 text-gray-900 hover:from-gray-300 hover:to-gray-400 dark:from-gray-700 dark:to-gray-600 dark:text-white\",\n        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-100\",\n        link: \"text-blue-600 underline-offset-4 hover:underline dark:text-blue-400\",\n      },\n      size: {\n        default: \"h-10 px-6 py-2\",\n        sm: \"h-8 rounded-lg px-4 text-xs\",\n        lg: \"h-12 rounded-xl px-8 text-base\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };","size_bytes":2071},"fit-track/public/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","size_bytes":1860},"fit-track/public/src/components/ui/dialog.tsx":{"content":"import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\nconst DialogTrigger = DialogPrimitive.Trigger\nconst DialogPortal = DialogPrimitive.Portal\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}","size_bytes":3833},"fit-track/public/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}","size_bytes":7612},"fit-track/public/src/components/ui/form.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\nimport { cn } from \"../../lib/utils\"\nimport { Label } from \"./label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}","size_bytes":4073},"fit-track/public/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }","size_bytes":793},"fit-track/public/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"../../lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }","size_bytes":712},"fit-track/public/src/components/ui/progress.tsx":{"content":"import * as React from \"react\";\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\nimport { cn } from \"../../lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };","size_bytes":785},"fit-track/public/src/components/ui/select.tsx":{"content":"import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Select = SelectPrimitive.Root\nconst SelectGroup = SelectPrimitive.Group\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}","size_bytes":5615},"fit-track/public/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }","size_bytes":759},"fit-track/public/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }","size_bytes":1142},"fit-track/public/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport { cn } from \"../../lib/utils\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };","size_bytes":1896},"fit-track/public/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }","size_bytes":691},"fit-track/public/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\nimport { cn } from \"../../lib/utils\"\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = \"Toast\"\n\nconst ToastAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ButtonHTMLAttributes<HTMLButtonElement>\n>(({ className, ...props }, ref) => (\n  <button\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = \"ToastAction\"\n\nconst ToastClose = React.forwardRef<\n  HTMLButtonElement,\n  React.ButtonHTMLAttributes<HTMLButtonElement>\n>(({ className, ...props }, ref) => (\n  <button\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </button>\n))\nToastClose.displayName = \"ToastClose\"\n\nconst ToastTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = \"ToastTitle\"\n\nconst ToastDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = \"ToastDescription\"\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  Toast,\n  ToastAction,\n  ToastClose,\n  ToastTitle,\n  ToastDescription,\n}","size_bytes":3688},"fit-track/public/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"../../hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastTitle,\n} from \"./toast\"\n\nexport function Toaster() {\n  const { toasts, dismiss } = useToast()\n\n  return (\n    <div className=\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\">\n      {toasts.map(({ id, title, description, action, ...props }) => (\n        <Toast key={id} {...props}>\n          <div className=\"grid gap-1\">\n            {title && <ToastTitle>{title}</ToastTitle>}\n            {description && (\n              <ToastDescription>{description}</ToastDescription>\n            )}\n          </div>\n          {action}\n          <ToastClose onClick={() => dismiss(id)} />\n        </Toast>\n      ))}\n    </div>\n  )\n}","size_bytes":809},"fit-track/public/src/components/ui/tooltip.tsx":{"content":"import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\nimport { cn } from \"../../lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }","size_bytes":1147}},"version":1}